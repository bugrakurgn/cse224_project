
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.38 (git sha1 543faed9c8c, clang++ 17.0.6 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Liberty frontend: /home/pinarizmir/.volare/sky130A/libs.ref/sky130_fd_sc_hd/lib/sky130_fd_sc_hd__tt_025C_1v80.lib
Imported 428 cell types from liberty file.

2. Executing Verilog-2005 frontend: /openlane/designs/top_module_project6/src/alu.v
Parsing SystemVerilog input from `/openlane/designs/top_module_project6/src/alu.v' to AST representation.
Storing AST representation for module `$abstract\alu'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: /openlane/designs/top_module_project6/src/register_file.v
Parsing SystemVerilog input from `/openlane/designs/top_module_project6/src/register_file.v' to AST representation.
Storing AST representation for module `$abstract\register_file'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: /openlane/designs/top_module_project6/src/instruction_decoder.v
Parsing SystemVerilog input from `/openlane/designs/top_module_project6/src/instruction_decoder.v' to AST representation.
Storing AST representation for module `$abstract\instruction_decoder'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: /openlane/designs/top_module_project6/src/seven_segment_decoder.v
Parsing SystemVerilog input from `/openlane/designs/top_module_project6/src/seven_segment_decoder.v' to AST representation.
Storing AST representation for module `$abstract\seven_segment_decoder'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: /openlane/designs/top_module_project6/src/top_module_project6.v
Parsing SystemVerilog input from `/openlane/designs/top_module_project6/src/top_module_project6.v' to AST representation.
Storing AST representation for module `$abstract\top_module_project6'.
Successfully finished Verilog frontend.

7. Executing HIERARCHY pass (managing design hierarchy).

8. Executing AST frontend in derive mode using pre-parsed AST for module `\top_module_project6'.
Generating RTLIL representation for module `\top_module_project6'.

8.1. Analyzing design hierarchy..
Top module:  \top_module_project6

8.2. Executing AST frontend in derive mode using pre-parsed AST for module `\seven_segment_decoder'.
Generating RTLIL representation for module `\seven_segment_decoder'.

8.3. Executing AST frontend in derive mode using pre-parsed AST for module `\alu'.
Generating RTLIL representation for module `\alu'.

8.4. Executing AST frontend in derive mode using pre-parsed AST for module `\register_file'.
Generating RTLIL representation for module `\register_file'.

8.5. Executing AST frontend in derive mode using pre-parsed AST for module `\instruction_decoder'.
Generating RTLIL representation for module `\instruction_decoder'.

8.6. Analyzing design hierarchy..
Top module:  \top_module_project6
Used module:     \seven_segment_decoder
Used module:     \alu
Used module:     \register_file
Used module:     \instruction_decoder

8.7. Analyzing design hierarchy..
Top module:  \top_module_project6
Used module:     \seven_segment_decoder
Used module:     \alu
Used module:     \register_file
Used module:     \instruction_decoder
Removing unused module `$abstract\top_module_project6'.
Removing unused module `$abstract\seven_segment_decoder'.
Removing unused module `$abstract\instruction_decoder'.
Removing unused module `$abstract\register_file'.
Removing unused module `$abstract\alu'.
Removed 5 unused modules.

9. Generating Graphviz representation of design.
Writing dot description to `/openlane/designs/top_module_project6/runs/RUN_2025.05.29_19.10.38/tmp/synthesis/hierarchy.dot'.
Dumping module top_module_project6 to page 1.
Renaming module top_module_project6 to top_module_project6.

10. Executing TRIBUF pass.

11. Executing HIERARCHY pass (managing design hierarchy).

11.1. Analyzing design hierarchy..
Top module:  \top_module_project6
Used module:     \seven_segment_decoder
Used module:     \alu
Used module:     \register_file
Used module:     \instruction_decoder

11.2. Analyzing design hierarchy..
Top module:  \top_module_project6
Used module:     \seven_segment_decoder
Used module:     \alu
Used module:     \register_file
Used module:     \instruction_decoder
Removed 0 unused modules.

12. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

13. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/openlane/designs/top_module_project6/src/register_file.v:21$59 in module register_file.
Marked 1 switch rules as full_case in process $proc$/openlane/designs/top_module_project6/src/alu.v:9$48 in module alu.
Removed 2 dead cases from process $proc$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:19$45 in module seven_segment_decoder.
Marked 2 switch rules as full_case in process $proc$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:19$45 in module seven_segment_decoder.
Marked 1 switch rules as full_case in process $proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:66$93 in module instruction_decoder.
Marked 2 switch rules as full_case in process $proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:56$92 in module instruction_decoder.
Removed a total of 2 dead cases.

14. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 1 redundant assignment.
Promoted 32 assignments to connections.

15. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\seven_segment_decoder.$proc$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:9$47'.
  Set init value: \count = 20'00000000000000000000
Found init rule in `\seven_segment_decoder.$proc$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:8$46'.
  Set init value: \sel = 2'00

16. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \reset in `\instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:56$92'.

17. Executing PROC_ROM pass (convert switches to ROMs).
Converted 1 switch.
<suppressed ~6 debug messages>

18. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\register_file.$proc$/openlane/designs/top_module_project6/src/register_file.v:0$69'.
Creating decoders for process `\register_file.$proc$/openlane/designs/top_module_project6/src/register_file.v:21$59'.
     1/3: $1$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$67
     2/3: $1$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_DATA[31:0]$66
     3/3: $1$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_ADDR[4:0]$65
Creating decoders for process `\alu.$proc$/openlane/designs/top_module_project6/src/alu.v:9$48'.
     1/1: $1\result[31:0]
Creating decoders for process `\seven_segment_decoder.$proc$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:9$47'.
Creating decoders for process `\seven_segment_decoder.$proc$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:8$46'.
Creating decoders for process `\seven_segment_decoder.$proc$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:19$45'.
     1/6: $1\seg[6:0]
     2/6: $1\an[3:0] [2]
     3/6: $1\an[3:0] [1]
     4/6: $1\an[3:0] [3]
     5/6: $1\digit[3:0]
     6/6: $1\an[3:0] [0]
Creating decoders for process `\seven_segment_decoder.$proc$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:11$41'.
     1/2: $0\count[19:0]
     2/2: $0\sel[1:0]
Creating decoders for process `\instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:0$116'.
Creating decoders for process `\instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:66$93'.
     1/1: $1\instruction[31:0]
Creating decoders for process `\instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:56$92'.
     1/1: $0\pc[4:0]

19. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:15$55_EN' from process `\register_file.$proc$/openlane/designs/top_module_project6/src/register_file.v:0$69'.
No latch inferred for signal `\alu.\result' from process `\alu.$proc$/openlane/designs/top_module_project6/src/alu.v:9$48'.
No latch inferred for signal `\seven_segment_decoder.\an' from process `\seven_segment_decoder.$proc$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:19$45'.
No latch inferred for signal `\seven_segment_decoder.\seg' from process `\seven_segment_decoder.$proc$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:19$45'.
No latch inferred for signal `\seven_segment_decoder.\digit' from process `\seven_segment_decoder.$proc$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:19$45'.
No latch inferred for signal `\instruction_decoder.$memwr$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:14$71_EN' from process `\instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:0$116'.
No latch inferred for signal `\instruction_decoder.$memwr$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:16$72_EN' from process `\instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:0$116'.
No latch inferred for signal `\instruction_decoder.$memwr$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:18$73_EN' from process `\instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:0$116'.
No latch inferred for signal `\instruction_decoder.$memwr$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:20$74_EN' from process `\instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:0$116'.
No latch inferred for signal `\instruction_decoder.$memwr$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:22$75_EN' from process `\instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:0$116'.
No latch inferred for signal `\instruction_decoder.$memwr$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:24$76_EN' from process `\instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:0$116'.
No latch inferred for signal `\instruction_decoder.$memwr$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:26$77_EN' from process `\instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:0$116'.
No latch inferred for signal `\instruction_decoder.$memwr$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:29$78_EN' from process `\instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:0$116'.
No latch inferred for signal `\instruction_decoder.$memwr$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:30$79_EN' from process `\instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:0$116'.
No latch inferred for signal `\instruction_decoder.$memwr$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:31$80_EN' from process `\instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:0$116'.
No latch inferred for signal `\instruction_decoder.$memwr$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:32$81_EN' from process `\instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:0$116'.
No latch inferred for signal `\instruction_decoder.$memwr$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:35$82_EN' from process `\instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:0$116'.
No latch inferred for signal `\instruction_decoder.$memwr$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:37$83_EN' from process `\instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:0$116'.
No latch inferred for signal `\instruction_decoder.$memwr$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:39$84_EN' from process `\instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:0$116'.
No latch inferred for signal `\instruction_decoder.$memwr$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:41$85_EN' from process `\instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:0$116'.
No latch inferred for signal `\instruction_decoder.$memwr$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:43$86_EN' from process `\instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:0$116'.
No latch inferred for signal `\instruction_decoder.$memwr$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:45$87_EN' from process `\instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:0$116'.
No latch inferred for signal `\instruction_decoder.$memwr$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:47$88_EN' from process `\instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:0$116'.
No latch inferred for signal `\instruction_decoder.$memwr$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:49$89_EN' from process `\instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:0$116'.
No latch inferred for signal `\instruction_decoder.$memwr$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:51$90_EN' from process `\instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:0$116'.
No latch inferred for signal `\instruction_decoder.$memwr$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:53$91_EN' from process `\instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:0$116'.
No latch inferred for signal `\instruction_decoder.\instruction' from process `\instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:66$93'.

20. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\register_file.$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_ADDR' using process `\register_file.$proc$/openlane/designs/top_module_project6/src/register_file.v:21$59'.
  created $dff cell `$procdff$195' with positive edge clock.
Creating register for signal `\register_file.$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_DATA' using process `\register_file.$proc$/openlane/designs/top_module_project6/src/register_file.v:21$59'.
  created $dff cell `$procdff$196' with positive edge clock.
Creating register for signal `\register_file.$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN' using process `\register_file.$proc$/openlane/designs/top_module_project6/src/register_file.v:21$59'.
  created $dff cell `$procdff$197' with positive edge clock.
Creating register for signal `\seven_segment_decoder.\sel' using process `\seven_segment_decoder.$proc$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:11$41'.
  created $dff cell `$procdff$198' with positive edge clock.
Creating register for signal `\seven_segment_decoder.\count' using process `\seven_segment_decoder.$proc$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:11$41'.
  created $dff cell `$procdff$199' with positive edge clock.
Creating register for signal `\instruction_decoder.\pc' using process `\instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:56$92'.
  created $adff cell `$procdff$200' with positive edge clock and positive level reset.

21. Executing PROC_MEMWR pass (convert process memory writes to cells).

22. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `register_file.$proc$/openlane/designs/top_module_project6/src/register_file.v:0$69'.
Found and cleaned up 1 empty switch in `\register_file.$proc$/openlane/designs/top_module_project6/src/register_file.v:21$59'.
Removing empty process `register_file.$proc$/openlane/designs/top_module_project6/src/register_file.v:21$59'.
Found and cleaned up 1 empty switch in `\alu.$proc$/openlane/designs/top_module_project6/src/alu.v:9$48'.
Removing empty process `alu.$proc$/openlane/designs/top_module_project6/src/alu.v:9$48'.
Removing empty process `seven_segment_decoder.$proc$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:9$47'.
Removing empty process `seven_segment_decoder.$proc$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:8$46'.
Found and cleaned up 2 empty switches in `\seven_segment_decoder.$proc$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:19$45'.
Removing empty process `seven_segment_decoder.$proc$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:19$45'.
Found and cleaned up 1 empty switch in `\seven_segment_decoder.$proc$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:11$41'.
Removing empty process `seven_segment_decoder.$proc$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:11$41'.
Removing empty process `instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:0$116'.
Found and cleaned up 1 empty switch in `\instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:66$93'.
Removing empty process `instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:66$93'.
Found and cleaned up 1 empty switch in `\instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:56$92'.
Removing empty process `instruction_decoder.$proc$/openlane/designs/top_module_project6/src/instruction_decoder.v:56$92'.
Cleaned up 7 empty switches.

23. Executing CHECK pass (checking for obvious problems).
Checking module top_module_project6...
Checking module register_file...
Checking module alu...
Checking module seven_segment_decoder...
Checking module instruction_decoder...
Found and reported 0 problems.

24. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_module_project6.
Optimizing module register_file.
<suppressed ~1 debug messages>
Optimizing module alu.
Optimizing module seven_segment_decoder.
<suppressed ~5 debug messages>
Optimizing module instruction_decoder.

25. Executing FLATTEN pass (flatten design).
Deleting now unused module register_file.
Deleting now unused module alu.
Deleting now unused module seven_segment_decoder.
Deleting now unused module instruction_decoder.
<suppressed ~4 debug messages>

26. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_module_project6.

27. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_module_project6..
Removed 3 unused cells and 93 unused wires.
<suppressed ~6 debug messages>

28. Executing OPT pass (performing simple optimizations).

28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_module_project6.

28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_module_project6'.
<suppressed ~78 debug messages>
Removed a total of 26 cells.

28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_module_project6..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~15 debug messages>

28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_module_project6.
    Consolidated identical input bits for $mux cell $flatten\RF.$procmux$143:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62
      New ports: A=1'0, B=1'1, Y=$flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0]
      New connections: $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [31:1] = { $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0] $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0] $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0] $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0] $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0] $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0] $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0] $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0] $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0] $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0] $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0] $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0] $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0] $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0] $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0] $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0] $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0] $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0] $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0] $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0] $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0] $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0] $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0] $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0] $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0] $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0] $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0] $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0] $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0] $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0] $flatten\RF.$0$memwr$\registers$/openlane/designs/top_module_project6/src/register_file.v:23$56_EN[31:0]$62 [0] }
    New ctrl vector for $pmux cell $flatten\SSD.$procmux$160: { $flatten\SSD.$procmux$162_CMP $auto$opt_reduce.cc:134:opt_pmux$203 }
    New ctrl vector for $pmux cell $flatten\SSD.$procmux$165: { $flatten\SSD.$procmux$163_CMP $auto$opt_reduce.cc:134:opt_pmux$205 }
    New ctrl vector for $pmux cell $flatten\SSD.$procmux$170: { $auto$opt_reduce.cc:134:opt_pmux$207 $flatten\SSD.$procmux$161_CMP }
    New ctrl vector for $pmux cell $flatten\SSD.$procmux$180: { $flatten\SSD.$procmux$164_CMP $auto$opt_reduce.cc:134:opt_pmux$209 }
  Optimizing cells in module \top_module_project6.
Performed a total of 5 changes.

28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_module_project6'.
Removed a total of 0 cells.

28.6. Executing OPT_DFF pass (perform DFF optimizations).

28.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_module_project6..
Removed 0 unused cells and 26 unused wires.
<suppressed ~1 debug messages>

28.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_module_project6.

28.9. Rerunning OPT passes. (Maybe there is more to do..)

28.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_module_project6..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~15 debug messages>

28.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_module_project6.
Performed a total of 0 changes.

28.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_module_project6'.
Removed a total of 0 cells.

28.13. Executing OPT_DFF pass (perform DFF optimizations).

28.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_module_project6..

28.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_module_project6.

28.16. Finished OPT passes. (There is nothing left to do.)

29. Executing FSM pass (extract and optimize FSM).

29.1. Executing FSM_DETECT pass (finding FSMs in design).

29.2. Executing FSM_EXTRACT pass (extracting FSM from design).

29.3. Executing FSM_OPT pass (simple optimizations of FSMs).

29.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_module_project6..

29.5. Executing FSM_OPT pass (simple optimizations of FSMs).

29.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

29.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

29.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

30. Executing OPT pass (performing simple optimizations).

30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_module_project6.

30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_module_project6'.
Removed a total of 0 cells.

30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_module_project6..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~15 debug messages>

30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_module_project6.
Performed a total of 0 changes.

30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_module_project6'.
Removed a total of 0 cells.

30.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\SSD.$procdff$199 ($dff) from module top_module_project6 (D = $flatten\SSD.$add$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:12$42_Y [19:0], Q = \SSD.count, rval = 20'00000000000000000000).
Adding EN signal on $flatten\SSD.$procdff$198 ($dff) from module top_module_project6 (D = $flatten\SSD.$add$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:15$44_Y [1:0], Q = \SSD.sel).
Adding EN signal on $flatten\ID.$procdff$200 ($adff) from module top_module_project6 (D = \ID.next_pc_address, Q = \ID.pc).

30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_module_project6..
Removed 3 unused cells and 3 unused wires.
<suppressed ~4 debug messages>

30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_module_project6.

30.9. Rerunning OPT passes. (Maybe there is more to do..)

30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_module_project6..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_module_project6.
Performed a total of 0 changes.

30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_module_project6'.
Removed a total of 0 cells.

30.13. Executing OPT_DFF pass (perform DFF optimizations).

30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_module_project6..

30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_module_project6.

30.16. Finished OPT passes. (There is nothing left to do.)

31. Executing WREDUCE pass (reducing word size of cells).
Removed top 27 address bits (of 32) from memory init port top_module_project6.$flatten\ID.$meminit$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:14$95 (ID.instruction_memory).
Removed top 27 address bits (of 32) from memory init port top_module_project6.$flatten\ID.$meminit$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:16$96 (ID.instruction_memory).
Removed top 27 address bits (of 32) from memory init port top_module_project6.$flatten\ID.$meminit$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:18$97 (ID.instruction_memory).
Removed top 27 address bits (of 32) from memory init port top_module_project6.$flatten\ID.$meminit$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:20$98 (ID.instruction_memory).
Removed top 27 address bits (of 32) from memory init port top_module_project6.$flatten\ID.$meminit$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:22$99 (ID.instruction_memory).
Removed top 27 address bits (of 32) from memory init port top_module_project6.$flatten\ID.$meminit$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:24$100 (ID.instruction_memory).
Removed top 27 address bits (of 32) from memory init port top_module_project6.$flatten\ID.$meminit$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:26$101 (ID.instruction_memory).
Removed top 27 address bits (of 32) from memory init port top_module_project6.$flatten\ID.$meminit$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:29$102 (ID.instruction_memory).
Removed top 27 address bits (of 32) from memory init port top_module_project6.$flatten\ID.$meminit$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:30$103 (ID.instruction_memory).
Removed top 27 address bits (of 32) from memory init port top_module_project6.$flatten\ID.$meminit$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:31$104 (ID.instruction_memory).
Removed top 27 address bits (of 32) from memory init port top_module_project6.$flatten\ID.$meminit$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:32$105 (ID.instruction_memory).
Removed top 27 address bits (of 32) from memory init port top_module_project6.$flatten\ID.$meminit$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:35$106 (ID.instruction_memory).
Removed top 27 address bits (of 32) from memory init port top_module_project6.$flatten\ID.$meminit$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:37$107 (ID.instruction_memory).
Removed top 27 address bits (of 32) from memory init port top_module_project6.$flatten\ID.$meminit$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:39$108 (ID.instruction_memory).
Removed top 27 address bits (of 32) from memory init port top_module_project6.$flatten\ID.$meminit$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:41$109 (ID.instruction_memory).
Removed top 27 address bits (of 32) from memory init port top_module_project6.$flatten\ID.$meminit$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:43$110 (ID.instruction_memory).
Removed top 27 address bits (of 32) from memory init port top_module_project6.$flatten\ID.$meminit$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:45$111 (ID.instruction_memory).
Removed top 27 address bits (of 32) from memory init port top_module_project6.$flatten\ID.$meminit$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:47$112 (ID.instruction_memory).
Removed top 27 address bits (of 32) from memory init port top_module_project6.$flatten\ID.$meminit$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:49$113 (ID.instruction_memory).
Removed top 27 address bits (of 32) from memory init port top_module_project6.$flatten\ID.$meminit$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:51$114 (ID.instruction_memory).
Removed top 27 address bits (of 32) from memory init port top_module_project6.$flatten\ID.$meminit$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:53$115 (ID.instruction_memory).
Removed top 27 address bits (of 32) from memory init port top_module_project6.$flatten\RF.$meminit$\registers$/openlane/designs/top_module_project6/src/register_file.v:15$68 (RF.registers).
Removed top 28 address bits (of 32) from memory init port top_module_project6.$flatten\SSD.$auto$mem.cc:328:emit$141 ($flatten\SSD.$auto$proc_rom.cc:150:do_switch$139).
Removed top 1 bits (of 6) from port B of cell top_module_project6.$eq$/openlane/designs/top_module_project6/src/top_module_project6.v:49$1 ($eq).
Removed top 1 bits (of 6) from port B of cell top_module_project6.$eq$/openlane/designs/top_module_project6/src/top_module_project6.v:50$2 ($eq).
Removed top 3 bits (of 6) from port B of cell top_module_project6.$eq$/openlane/designs/top_module_project6/src/top_module_project6.v:86$33 ($eq).
Removed top 4 bits (of 6) from port B of cell top_module_project6.$eq$/openlane/designs/top_module_project6/src/top_module_project6.v:87$35 ($eq).
Removed top 31 bits (of 32) from port B of cell top_module_project6.$add$/openlane/designs/top_module_project6/src/top_module_project6.v:94$36 ($add).
Removed top 26 bits (of 32) from port Y of cell top_module_project6.$add$/openlane/designs/top_module_project6/src/top_module_project6.v:94$36 ($add).
Removed top 26 bits (of 32) from mux cell top_module_project6.$ternary$/openlane/designs/top_module_project6/src/top_module_project6.v:93$38 ($mux).
Removed top 27 bits (of 32) from mux cell top_module_project6.$ternary$/openlane/designs/top_module_project6/src/top_module_project6.v:92$40 ($mux).
Removed top 1 bits (of 3) from port B of cell top_module_project6.$flatten\ALU.$procmux$158_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top_module_project6.$flatten\ALU.$procmux$157_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell top_module_project6.$flatten\SSD.$procmux$163_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell top_module_project6.$flatten\SSD.$add$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:15$44 ($add).
Removed top 30 bits (of 32) from port Y of cell top_module_project6.$flatten\SSD.$add$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:15$44 ($add).
Removed top 3 bits (of 20) from port B of cell top_module_project6.$flatten\SSD.$eq$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:13$43 ($eq).
Removed top 31 bits (of 32) from port B of cell top_module_project6.$flatten\SSD.$add$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:12$42 ($add).
Removed top 12 bits (of 32) from port Y of cell top_module_project6.$flatten\SSD.$add$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:12$42 ($add).
Removed top 1 bits (of 6) from mux cell top_module_project6.$ternary$/openlane/designs/top_module_project6/src/top_module_project6.v:93$38 ($mux).
Removed top 1 bits (of 6) from port Y of cell top_module_project6.$add$/openlane/designs/top_module_project6/src/top_module_project6.v:94$36 ($add).
Removed top 27 bits (of 32) from wire top_module_project6.$add$/openlane/designs/top_module_project6/src/top_module_project6.v:94$36_Y.
Removed top 12 bits (of 32) from wire top_module_project6.$flatten\SSD.$add$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:12$42_Y.
Removed top 30 bits (of 32) from wire top_module_project6.$flatten\SSD.$add$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:15$44_Y.
Removed top 27 bits (of 32) from wire top_module_project6.$ternary$/openlane/designs/top_module_project6/src/top_module_project6.v:93$38_Y.

32. Executing PEEPOPT pass (run peephole optimizers).

33. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_module_project6..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

34. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top_module_project6:
  creating $macc model for $add$/openlane/designs/top_module_project6/src/top_module_project6.v:94$36 ($add).
  creating $macc model for $flatten\ALU.$add$/openlane/designs/top_module_project6/src/alu.v:12$49 ($add).
  creating $macc model for $flatten\ALU.$add$/openlane/designs/top_module_project6/src/alu.v:16$53 ($add).
  creating $macc model for $flatten\ALU.$sub$/openlane/designs/top_module_project6/src/alu.v:13$50 ($sub).
  creating $macc model for $flatten\ALU.$sub$/openlane/designs/top_module_project6/src/alu.v:17$54 ($sub).
  creating $macc model for $flatten\SSD.$add$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:12$42 ($add).
  creating $macc model for $flatten\SSD.$add$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:15$44 ($add).
  creating $alu model for $macc $flatten\SSD.$add$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:15$44.
  creating $alu model for $macc $flatten\SSD.$add$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:12$42.
  creating $alu model for $macc $flatten\ALU.$sub$/openlane/designs/top_module_project6/src/alu.v:17$54.
  creating $alu model for $macc $flatten\ALU.$sub$/openlane/designs/top_module_project6/src/alu.v:13$50.
  creating $alu model for $macc $flatten\ALU.$add$/openlane/designs/top_module_project6/src/alu.v:16$53.
  creating $alu model for $macc $flatten\ALU.$add$/openlane/designs/top_module_project6/src/alu.v:12$49.
  creating $alu model for $macc $add$/openlane/designs/top_module_project6/src/top_module_project6.v:94$36.
  creating $alu model for $eq$/openlane/designs/top_module_project6/src/top_module_project6.v:84$32 ($eq): merged with $flatten\ALU.$sub$/openlane/designs/top_module_project6/src/alu.v:13$50.
  creating $alu cell for $add$/openlane/designs/top_module_project6/src/top_module_project6.v:94$36: $auto$alumacc.cc:485:replace_alu$217
  creating $alu cell for $flatten\ALU.$add$/openlane/designs/top_module_project6/src/alu.v:12$49: $auto$alumacc.cc:485:replace_alu$220
  creating $alu cell for $flatten\ALU.$sub$/openlane/designs/top_module_project6/src/alu.v:13$50, $eq$/openlane/designs/top_module_project6/src/top_module_project6.v:84$32: $auto$alumacc.cc:485:replace_alu$223
  creating $alu cell for $flatten\ALU.$add$/openlane/designs/top_module_project6/src/alu.v:16$53: $auto$alumacc.cc:485:replace_alu$228
  creating $alu cell for $flatten\ALU.$sub$/openlane/designs/top_module_project6/src/alu.v:17$54: $auto$alumacc.cc:485:replace_alu$231
  creating $alu cell for $flatten\SSD.$add$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:12$42: $auto$alumacc.cc:485:replace_alu$234
  creating $alu cell for $flatten\SSD.$add$/openlane/designs/top_module_project6/src/seven_segment_decoder.v:15$44: $auto$alumacc.cc:485:replace_alu$237
  created 7 $alu and 0 $macc cells.

35. Executing SHARE pass (SAT-based resource sharing).
Found 5 cells in module top_module_project6 that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:19$58 ($memrd):
    Found 21 activation_patterns using ctrl signal { $flatten\SSD.$procmux$161_CMP $flatten\SSD.$procmux$162_CMP $flatten\SSD.$procmux$163_CMP $flatten\SSD.$procmux$164_CMP $flatten\ALU.$procmux$158_CMP $flatten\ALU.$procmux$157_CMP $flatten\ALU.$procmux$156_CMP $flatten\ALU.$procmux$155_CMP $flatten\RF.$logic_and$/openlane/designs/top_module_project6/src/register_file.v:22$64_Y \jump_taken }.
    Found 1 candidates: $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57
    Analyzing resource sharing with $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57 ($memrd):
      Found 31 activation_patterns using ctrl signal { $flatten\SSD.$procmux$161_CMP $flatten\SSD.$procmux$162_CMP $flatten\SSD.$procmux$163_CMP $flatten\SSD.$procmux$164_CMP $flatten\ALU.$procmux$158_CMP $flatten\ALU.$procmux$157_CMP $flatten\ALU.$procmux$156_CMP $flatten\ALU.$procmux$155_CMP $flatten\ALU.$procmux$154_CMP $flatten\ALU.$procmux$153_CMP $flatten\RF.$logic_and$/openlane/designs/top_module_project6/src/register_file.v:22$64_Y \jump_taken }.
      Forbidden control signals for this pair of cells: \branch_taken
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:19$58: \jump_taken = 1'0
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:19$58: { $flatten\SSD.$procmux$161_CMP $flatten\ALU.$procmux$157_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:19$58: { $flatten\SSD.$procmux$162_CMP $flatten\ALU.$procmux$157_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:19$58: { $flatten\SSD.$procmux$163_CMP $flatten\ALU.$procmux$157_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:19$58: { $flatten\SSD.$procmux$164_CMP $flatten\ALU.$procmux$157_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:19$58: { $flatten\ALU.$procmux$157_CMP $flatten\RF.$logic_and$/openlane/designs/top_module_project6/src/register_file.v:22$64_Y } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:19$58: { $flatten\SSD.$procmux$161_CMP $flatten\ALU.$procmux$158_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:19$58: { $flatten\SSD.$procmux$162_CMP $flatten\ALU.$procmux$158_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:19$58: { $flatten\SSD.$procmux$163_CMP $flatten\ALU.$procmux$158_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:19$58: { $flatten\SSD.$procmux$164_CMP $flatten\ALU.$procmux$158_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:19$58: { $flatten\ALU.$procmux$158_CMP $flatten\RF.$logic_and$/openlane/designs/top_module_project6/src/register_file.v:22$64_Y } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:19$58: { $flatten\SSD.$procmux$161_CMP $flatten\ALU.$procmux$156_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:19$58: { $flatten\SSD.$procmux$162_CMP $flatten\ALU.$procmux$156_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:19$58: { $flatten\SSD.$procmux$163_CMP $flatten\ALU.$procmux$156_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:19$58: { $flatten\SSD.$procmux$164_CMP $flatten\ALU.$procmux$156_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:19$58: { $flatten\ALU.$procmux$156_CMP $flatten\RF.$logic_and$/openlane/designs/top_module_project6/src/register_file.v:22$64_Y } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:19$58: { $flatten\SSD.$procmux$161_CMP $flatten\ALU.$procmux$155_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:19$58: { $flatten\SSD.$procmux$162_CMP $flatten\ALU.$procmux$155_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:19$58: { $flatten\SSD.$procmux$163_CMP $flatten\ALU.$procmux$155_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:19$58: { $flatten\SSD.$procmux$164_CMP $flatten\ALU.$procmux$155_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:19$58: { $flatten\ALU.$procmux$155_CMP $flatten\RF.$logic_and$/openlane/designs/top_module_project6/src/register_file.v:22$64_Y } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57: \jump_taken = 1'0
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57: { $flatten\SSD.$procmux$161_CMP $flatten\ALU.$procmux$157_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57: { $flatten\SSD.$procmux$162_CMP $flatten\ALU.$procmux$157_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57: { $flatten\SSD.$procmux$163_CMP $flatten\ALU.$procmux$157_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57: { $flatten\SSD.$procmux$164_CMP $flatten\ALU.$procmux$157_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57: { $flatten\ALU.$procmux$157_CMP $flatten\RF.$logic_and$/openlane/designs/top_module_project6/src/register_file.v:22$64_Y } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57: { $flatten\SSD.$procmux$161_CMP $flatten\ALU.$procmux$158_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57: { $flatten\SSD.$procmux$162_CMP $flatten\ALU.$procmux$158_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57: { $flatten\SSD.$procmux$163_CMP $flatten\ALU.$procmux$158_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57: { $flatten\SSD.$procmux$164_CMP $flatten\ALU.$procmux$158_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57: { $flatten\ALU.$procmux$158_CMP $flatten\RF.$logic_and$/openlane/designs/top_module_project6/src/register_file.v:22$64_Y } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57: { $flatten\SSD.$procmux$161_CMP $flatten\ALU.$procmux$154_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57: { $flatten\SSD.$procmux$162_CMP $flatten\ALU.$procmux$154_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57: { $flatten\SSD.$procmux$163_CMP $flatten\ALU.$procmux$154_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57: { $flatten\SSD.$procmux$164_CMP $flatten\ALU.$procmux$154_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57: { $flatten\ALU.$procmux$154_CMP $flatten\RF.$logic_and$/openlane/designs/top_module_project6/src/register_file.v:22$64_Y } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57: { $flatten\SSD.$procmux$161_CMP $flatten\ALU.$procmux$156_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57: { $flatten\SSD.$procmux$162_CMP $flatten\ALU.$procmux$156_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57: { $flatten\SSD.$procmux$163_CMP $flatten\ALU.$procmux$156_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57: { $flatten\SSD.$procmux$164_CMP $flatten\ALU.$procmux$156_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57: { $flatten\ALU.$procmux$156_CMP $flatten\RF.$logic_and$/openlane/designs/top_module_project6/src/register_file.v:22$64_Y } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57: { $flatten\SSD.$procmux$161_CMP $flatten\ALU.$procmux$155_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57: { $flatten\SSD.$procmux$162_CMP $flatten\ALU.$procmux$155_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57: { $flatten\SSD.$procmux$163_CMP $flatten\ALU.$procmux$155_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57: { $flatten\SSD.$procmux$164_CMP $flatten\ALU.$procmux$155_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57: { $flatten\ALU.$procmux$155_CMP $flatten\RF.$logic_and$/openlane/designs/top_module_project6/src/register_file.v:22$64_Y } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57: { $flatten\SSD.$procmux$161_CMP $flatten\ALU.$procmux$153_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57: { $flatten\SSD.$procmux$162_CMP $flatten\ALU.$procmux$153_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57: { $flatten\SSD.$procmux$163_CMP $flatten\ALU.$procmux$153_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57: { $flatten\SSD.$procmux$164_CMP $flatten\ALU.$procmux$153_CMP } = 2'11
      Activation pattern for cell $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57: { $flatten\ALU.$procmux$153_CMP $flatten\RF.$logic_and$/openlane/designs/top_module_project6/src/register_file.v:22$64_Y } = 2'11
      Size of SAT problem: 0 cells, 606 variables, 1651 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $flatten\SSD.$procmux$161_CMP $flatten\SSD.$procmux$162_CMP $flatten\SSD.$procmux$163_CMP $flatten\SSD.$procmux$164_CMP $flatten\ALU.$procmux$158_CMP $flatten\ALU.$procmux$157_CMP $flatten\ALU.$procmux$156_CMP $flatten\ALU.$procmux$155_CMP $flatten\ALU.$procmux$154_CMP $flatten\ALU.$procmux$153_CMP $flatten\RF.$logic_and$/openlane/designs/top_module_project6/src/register_file.v:22$64_Y \jump_taken } = 12'000100000000
  Analyzing resource sharing options for $flatten\RF.$memrd$\registers$/openlane/designs/top_module_project6/src/register_file.v:18$57 ($memrd):
    Found 31 activation_patterns using ctrl signal { $flatten\SSD.$procmux$161_CMP $flatten\SSD.$procmux$162_CMP $flatten\SSD.$procmux$163_CMP $flatten\SSD.$procmux$164_CMP $flatten\ALU.$procmux$158_CMP $flatten\ALU.$procmux$157_CMP $flatten\ALU.$procmux$156_CMP $flatten\ALU.$procmux$155_CMP $flatten\ALU.$procmux$154_CMP $flatten\ALU.$procmux$153_CMP $flatten\RF.$logic_and$/openlane/designs/top_module_project6/src/register_file.v:22$64_Y \jump_taken }.
    No candidates found.
  Analyzing resource sharing options for $flatten\ID.$memrd$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:68$94 ($memrd):
    Found 1 activation_patterns using ctrl signal \control.
    No candidates found.
  Analyzing resource sharing options for $flatten\ALU.$shr$/openlane/designs/top_module_project6/src/alu.v:15$52 ($shr):
    Found 5 activation_patterns using ctrl signal { $flatten\SSD.$procmux$161_CMP $flatten\SSD.$procmux$162_CMP $flatten\SSD.$procmux$163_CMP $flatten\SSD.$procmux$164_CMP $flatten\ALU.$procmux$155_CMP $flatten\RF.$logic_and$/openlane/designs/top_module_project6/src/register_file.v:22$64_Y }.
    No candidates found.
  Analyzing resource sharing options for $flatten\ALU.$shl$/openlane/designs/top_module_project6/src/alu.v:14$51 ($shl):
    Found 5 activation_patterns using ctrl signal { $flatten\SSD.$procmux$161_CMP $flatten\SSD.$procmux$162_CMP $flatten\SSD.$procmux$163_CMP $flatten\SSD.$procmux$164_CMP $flatten\ALU.$procmux$156_CMP $flatten\RF.$logic_and$/openlane/designs/top_module_project6/src/register_file.v:22$64_Y }.
    No candidates found.

36. Executing OPT pass (performing simple optimizations).

36.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_module_project6.

36.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_module_project6'.
Removed a total of 0 cells.

36.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_module_project6..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

36.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_module_project6.
Performed a total of 0 changes.

36.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_module_project6'.
Removed a total of 0 cells.

36.6. Executing OPT_DFF pass (perform DFF optimizations).

36.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_module_project6..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

36.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_module_project6.

36.9. Rerunning OPT passes. (Maybe there is more to do..)

36.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_module_project6..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

36.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_module_project6.
Performed a total of 0 changes.

36.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_module_project6'.
Removed a total of 0 cells.

36.13. Executing OPT_DFF pass (perform DFF optimizations).

36.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_module_project6..

36.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_module_project6.

36.16. Finished OPT passes. (There is nothing left to do.)

37. Executing MEMORY pass.

37.1. Executing OPT_MEM pass (optimize memories).
top_module_project6.ID.instruction_memory: removing const-0 lane 4
top_module_project6.ID.instruction_memory: removing const-0 lane 5
top_module_project6.ID.instruction_memory: removing const-0 lane 6
top_module_project6.ID.instruction_memory: removing const-0 lane 7
top_module_project6.ID.instruction_memory: removing const-0 lane 8
top_module_project6.ID.instruction_memory: removing const-0 lane 9
top_module_project6.ID.instruction_memory: removing const-0 lane 10
top_module_project6.ID.instruction_memory: removing const-0 lane 26
Performed a total of 1 transformations.

37.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

37.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing top_module_project6.RF.registers write port 0.

37.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

37.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139'[0] in module `\top_module_project6': no output FF found.
Checking read port `\ID.instruction_memory'[0] in module `\top_module_project6': no output FF found.
Checking read port `\RF.registers'[0] in module `\top_module_project6': no output FF found.
Checking read port `\RF.registers'[1] in module `\top_module_project6': no output FF found.
Checking read port address `$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139'[0] in module `\top_module_project6': no address FF found.
Checking read port address `\ID.instruction_memory'[0] in module `\top_module_project6': address FF has async set and/or reset, not supported.
Checking read port address `\RF.registers'[0] in module `\top_module_project6': no address FF found.
Checking read port address `\RF.registers'[1] in module `\top_module_project6': no address FF found.

37.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_module_project6..

37.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating read ports of memory top_module_project6.RF.registers by address:

37.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

37.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_module_project6..

37.10. Executing MEMORY_COLLECT pass (generating $mem cells).

38. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_module_project6..

39. Executing OPT pass (performing simple optimizations).

39.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_module_project6.
<suppressed ~9 debug messages>

39.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_module_project6'.
Removed a total of 0 cells.

39.3. Executing OPT_DFF pass (perform DFF optimizations).

39.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_module_project6..
Removed 1 unused cells and 7 unused wires.
<suppressed ~2 debug messages>

39.5. Finished fast OPT passes.

40. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $flatten\SSD.$auto$proc_rom.cc:150:do_switch$139 in module \top_module_project6:
  created 16 $dff cells and 0 static cells of width 7.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory \ID.instruction_memory in module \top_module_project6:
  created 21 $dff cells and 0 static cells of width 24.
  read interface: 0 $dff and 31 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory \RF.registers in module \top_module_project6:
  created 32 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 62 $mux cells.
  write interface: 32 write mux blocks.

41. Executing OPT pass (performing simple optimizations).

41.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_module_project6.
<suppressed ~58 debug messages>

41.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_module_project6'.
Removed a total of 0 cells.

41.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_module_project6..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~41 debug messages>

41.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_module_project6.
    Consolidated identical input bits for $mux cell $memory\ID.instruction_memory$rdmux[0][4][10]$368:
      Old ports: A=24'000010000000000000001101, B=24'x, Y=$memory\ID.instruction_memory$rdmux[0][3][5]$a$330
      New ports: A=2'01, B=2'x, Y=$memory\ID.instruction_memory$rdmux[0][3][5]$a$330 [1:0]
      New connections: $memory\ID.instruction_memory$rdmux[0][3][5]$a$330 [23:2] = { $memory\ID.instruction_memory$rdmux[0][3][5]$a$330 [1] $memory\ID.instruction_memory$rdmux[0][3][5]$a$330 [1] $memory\ID.instruction_memory$rdmux[0][3][5]$a$330 [1] $memory\ID.instruction_memory$rdmux[0][3][5]$a$330 [1:0] $memory\ID.instruction_memory$rdmux[0][3][5]$a$330 [1] $memory\ID.instruction_memory$rdmux[0][3][5]$a$330 [1] $memory\ID.instruction_memory$rdmux[0][3][5]$a$330 [1] $memory\ID.instruction_memory$rdmux[0][3][5]$a$330 [1] $memory\ID.instruction_memory$rdmux[0][3][5]$a$330 [1] $memory\ID.instruction_memory$rdmux[0][3][5]$a$330 [1] $memory\ID.instruction_memory$rdmux[0][3][5]$a$330 [1] $memory\ID.instruction_memory$rdmux[0][3][5]$a$330 [1] $memory\ID.instruction_memory$rdmux[0][3][5]$a$330 [1] $memory\ID.instruction_memory$rdmux[0][3][5]$a$330 [1] $memory\ID.instruction_memory$rdmux[0][3][5]$a$330 [1] $memory\ID.instruction_memory$rdmux[0][3][5]$a$330 [1] $memory\ID.instruction_memory$rdmux[0][3][5]$a$330 [1] $memory\ID.instruction_memory$rdmux[0][3][5]$a$330 [1] $memory\ID.instruction_memory$rdmux[0][3][5]$a$330 [1:0] $memory\ID.instruction_memory$rdmux[0][3][5]$a$330 [0] }
    Consolidated identical input bits for $mux cell $memory\ID.instruction_memory$rdmux[0][4][9]$365:
      Old ports: A=24'010000100000000001110000, B=24'110000010100101000000001, Y=$memory\ID.instruction_memory$rdmux[0][3][4]$b$328
      New ports: A=2'10, B=2'01, Y={ $memory\ID.instruction_memory$rdmux[0][3][4]$b$328 [4] $memory\ID.instruction_memory$rdmux[0][3][4]$b$328 [0] }
      New connections: { $memory\ID.instruction_memory$rdmux[0][3][4]$b$328 [23:5] $memory\ID.instruction_memory$rdmux[0][3][4]$b$328 [3:1] } = { $memory\ID.instruction_memory$rdmux[0][3][4]$b$328 [0] 5'10000 $memory\ID.instruction_memory$rdmux[0][3][4]$b$328 [4] $memory\ID.instruction_memory$rdmux[0][3][4]$b$328 [0] 1'0 $memory\ID.instruction_memory$rdmux[0][3][4]$b$328 [0] 2'00 $memory\ID.instruction_memory$rdmux[0][3][4]$b$328 [0] 1'0 $memory\ID.instruction_memory$rdmux[0][3][4]$b$328 [0] 2'00 $memory\ID.instruction_memory$rdmux[0][3][4]$b$328 [4] $memory\ID.instruction_memory$rdmux[0][3][4]$b$328 [4] 3'000 }
    Consolidated identical input bits for $mux cell $memory\ID.instruction_memory$rdmux[0][4][8]$362:
      Old ports: A=24'010000011000111010000000, B=24'010000011100000001100000, Y=$memory\ID.instruction_memory$rdmux[0][3][4]$a$327
      New ports: A=2'10, B=2'01, Y={ $memory\ID.instruction_memory$rdmux[0][3][4]$a$327 [7] $memory\ID.instruction_memory$rdmux[0][3][4]$a$327 [5] }
      New connections: { $memory\ID.instruction_memory$rdmux[0][3][4]$a$327 [23:8] $memory\ID.instruction_memory$rdmux[0][3][4]$a$327 [6] $memory\ID.instruction_memory$rdmux[0][3][4]$a$327 [4:0] } = { 9'010000011 $memory\ID.instruction_memory$rdmux[0][3][4]$a$327 [5] 2'00 $memory\ID.instruction_memory$rdmux[0][3][4]$a$327 [7] $memory\ID.instruction_memory$rdmux[0][3][4]$a$327 [7] $memory\ID.instruction_memory$rdmux[0][3][4]$a$327 [7] 1'0 $memory\ID.instruction_memory$rdmux[0][3][4]$a$327 [5] 5'00000 }
    Consolidated identical input bits for $mux cell $memory\ID.instruction_memory$rdmux[0][4][7]$359:
      Old ports: A=24'110000000000110000000001, B=24'110000000000111000000001, Y=$memory\ID.instruction_memory$rdmux[0][3][3]$b$325
      New ports: A=1'0, B=1'1, Y=$memory\ID.instruction_memory$rdmux[0][3][3]$b$325 [9]
      New connections: { $memory\ID.instruction_memory$rdmux[0][3][3]$b$325 [23:10] $memory\ID.instruction_memory$rdmux[0][3][3]$b$325 [8:0] } = 23'11000000000011000000001
    Consolidated identical input bits for $mux cell $memory\ID.instruction_memory$rdmux[0][4][6]$356:
      Old ports: A=24'010000000000000001010000, B=24'000100010000101000000110, Y=$memory\ID.instruction_memory$rdmux[0][3][3]$a$324
      New ports: A=2'10, B=2'01, Y={ $memory\ID.instruction_memory$rdmux[0][3][3]$a$324 [4] $memory\ID.instruction_memory$rdmux[0][3][3]$a$324 [1] }
      New connections: { $memory\ID.instruction_memory$rdmux[0][3][3]$a$324 [23:5] $memory\ID.instruction_memory$rdmux[0][3][3]$a$324 [3:2] $memory\ID.instruction_memory$rdmux[0][3][3]$a$324 [0] } = { 1'0 $memory\ID.instruction_memory$rdmux[0][3][3]$a$324 [4] 1'0 $memory\ID.instruction_memory$rdmux[0][3][3]$a$324 [1] 3'000 $memory\ID.instruction_memory$rdmux[0][3][3]$a$324 [1] 4'0000 $memory\ID.instruction_memory$rdmux[0][3][3]$a$324 [1] 1'0 $memory\ID.instruction_memory$rdmux[0][3][3]$a$324 [1] 2'00 $memory\ID.instruction_memory$rdmux[0][3][3]$a$324 [4] 2'00 $memory\ID.instruction_memory$rdmux[0][3][3]$a$324 [1] 1'0 }
    Consolidated identical input bits for $mux cell $memory\ID.instruction_memory$rdmux[0][4][5]$353:
      Old ports: A=24'000000000000000000000000, B=24'110000000000100000000100, Y=$memory\ID.instruction_memory$rdmux[0][3][2]$b$322
      New ports: A=1'0, B=1'1, Y=$memory\ID.instruction_memory$rdmux[0][3][2]$b$322 [2]
      New connections: { $memory\ID.instruction_memory$rdmux[0][3][2]$b$322 [23:3] $memory\ID.instruction_memory$rdmux[0][3][2]$b$322 [1:0] } = { $memory\ID.instruction_memory$rdmux[0][3][2]$b$322 [2] $memory\ID.instruction_memory$rdmux[0][3][2]$b$322 [2] 10'0000000000 $memory\ID.instruction_memory$rdmux[0][3][2]$b$322 [2] 10'0000000000 }
    Consolidated identical input bits for $mux cell $memory\ID.instruction_memory$rdmux[0][4][3]$347:
      Old ports: A=24'100000011110101111100000, B=24'000000000000000000000000, Y=$memory\ID.instruction_memory$rdmux[0][3][1]$b$319
      New ports: A=1'1, B=1'0, Y=$memory\ID.instruction_memory$rdmux[0][3][1]$b$319 [5]
      New connections: { $memory\ID.instruction_memory$rdmux[0][3][1]$b$319 [23:6] $memory\ID.instruction_memory$rdmux[0][3][1]$b$319 [4:0] } = { $memory\ID.instruction_memory$rdmux[0][3][1]$b$319 [5] 6'000000 $memory\ID.instruction_memory$rdmux[0][3][1]$b$319 [5] $memory\ID.instruction_memory$rdmux[0][3][1]$b$319 [5] $memory\ID.instruction_memory$rdmux[0][3][1]$b$319 [5] $memory\ID.instruction_memory$rdmux[0][3][1]$b$319 [5] 1'0 $memory\ID.instruction_memory$rdmux[0][3][1]$b$319 [5] 1'0 $memory\ID.instruction_memory$rdmux[0][3][1]$b$319 [5] $memory\ID.instruction_memory$rdmux[0][3][1]$b$319 [5] $memory\ID.instruction_memory$rdmux[0][3][1]$b$319 [5] $memory\ID.instruction_memory$rdmux[0][3][1]$b$319 [5] 5'00000 }
    Consolidated identical input bits for $mux cell $memory\ID.instruction_memory$rdmux[0][4][2]$344:
      Old ports: A=24'110000000010101000000010, B=24'000010000000000000001100, Y=$memory\ID.instruction_memory$rdmux[0][3][1]$a$318
      New ports: A=2'01, B=2'10, Y=$memory\ID.instruction_memory$rdmux[0][3][1]$a$318 [2:1]
      New connections: { $memory\ID.instruction_memory$rdmux[0][3][1]$a$318 [23:3] $memory\ID.instruction_memory$rdmux[0][3][1]$a$318 [0] } = { $memory\ID.instruction_memory$rdmux[0][3][1]$a$318 [1] $memory\ID.instruction_memory$rdmux[0][3][1]$a$318 [1] 2'00 $memory\ID.instruction_memory$rdmux[0][3][1]$a$318 [2] 5'00000 $memory\ID.instruction_memory$rdmux[0][3][1]$a$318 [1] 1'0 $memory\ID.instruction_memory$rdmux[0][3][1]$a$318 [1] 1'0 $memory\ID.instruction_memory$rdmux[0][3][1]$a$318 [1] 5'00000 $memory\ID.instruction_memory$rdmux[0][3][1]$a$318 [2] 1'0 }
    Consolidated identical input bits for $mux cell $memory\ID.instruction_memory$rdmux[0][4][1]$341:
      Old ports: A=24'010000101001111110010000, B=24'111001100110100000000101, Y=$memory\ID.instruction_memory$rdmux[0][3][0]$b$316
      New ports: A=2'10, B=2'01, Y={ $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [4] $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [0] }
      New connections: { $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [23:5] $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [3:1] } = { $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [0] 1'1 $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [0] 2'00 $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [0] 2'10 $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [4] $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [0] $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [0] $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [4] 1'1 $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [4] $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [4] $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [4] $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [4] 3'000 $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory\ID.instruction_memory$rdmux[0][4][0]$338:
      Old ports: A=24'110000000001010000001010, B=24'110000000001111000001111, Y=$memory\ID.instruction_memory$rdmux[0][3][0]$a$315
      New ports: A=1'0, B=1'1, Y=$memory\ID.instruction_memory$rdmux[0][3][0]$a$315 [0]
      New connections: $memory\ID.instruction_memory$rdmux[0][3][0]$a$315 [23:1] = { 12'110000000001 $memory\ID.instruction_memory$rdmux[0][3][0]$a$315 [0] 1'1 $memory\ID.instruction_memory$rdmux[0][3][0]$a$315 [0] 6'000001 $memory\ID.instruction_memory$rdmux[0][3][0]$a$315 [0] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][3][6]$287:
      Old ports: A=7'1000110, B=7'0100001, Y=$memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][3]$a$267
      New ports: A=2'10, B=2'01, Y=$memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][3]$a$267 [1:0]
      New connections: $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][3]$a$267 [6:2] = { $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][3]$a$267 [1:0] 2'00 $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][3]$a$267 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][3][5]$284:
      Old ports: A=7'0001000, B=7'0000011, Y=$memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][2]$b$265
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][2]$b$265 [3] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][2]$b$265 [0] }
      New connections: { $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][2]$b$265 [6:4] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][2]$b$265 [2:1] } = { 4'0000 $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][2]$b$265 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][3][4]$281:
      Old ports: A=7'0000000, B=7'0011000, Y=$memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][2]$a$264
      New ports: A=1'0, B=1'1, Y=$memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][2]$a$264 [3]
      New connections: { $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][2]$a$264 [6:4] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][2]$a$264 [2:0] } = { 2'00 $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][2]$a$264 [3] 3'000 }
    Consolidated identical input bits for $mux cell $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][3][3]$278:
      Old ports: A=7'0000010, B=7'1111000, Y=$memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][1]$b$262
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][1]$b$262 [3] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][1]$b$262 [1] }
      New connections: { $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][1]$b$262 [6:4] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][1]$b$262 [2] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][1]$b$262 [0] } = { $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][1]$b$262 [3] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][1]$b$262 [3] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][1]$b$262 [3] 2'00 }
    Consolidated identical input bits for $mux cell $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][3][2]$275:
      Old ports: A=7'0011001, B=7'0010010, Y=$memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][1]$a$261
      New ports: A=2'01, B=2'10, Y=$memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][1]$a$261 [1:0]
      New connections: $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][1]$a$261 [6:2] = { 3'001 $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][1]$a$261 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][3][1]$272:
      Old ports: A=7'0100100, B=7'0110000, Y=$memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][0]$b$259
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][0]$b$259 [4] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][0]$b$259 [2] }
      New connections: { $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][0]$b$259 [6:5] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][0]$b$259 [3] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][0]$b$259 [1:0] } = 5'01000
    Consolidated identical input bits for $mux cell $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][3][0]$269:
      Old ports: A=7'1000000, B=7'1111001, Y=$memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][0]$a$258
      New ports: A=1'0, B=1'1, Y=$memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][0]$a$258 [0]
      New connections: $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][0]$a$258 [6:1] = { 1'1 $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][0]$a$258 [0] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][0]$a$258 [0] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][0]$a$258 [0] 2'00 }
    Consolidated identical input bits for $mux cell $flatten\ID.$procmux$190:
      Old ports: A=0, B={ $flatten\ID.$memrd$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:68$94_DATA [31:27] 1'0 $flatten\ID.$memrd$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:68$94_DATA [25:11] 7'0000000 $flatten\ID.$memrd$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:68$94_DATA [3:0] }, Y=\ID.instruction
      New ports: A=24'000000000000000000000000, B={ $flatten\ID.$memrd$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:68$94_DATA [31:27] $flatten\ID.$memrd$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:68$94_DATA [25:11] $flatten\ID.$memrd$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:68$94_DATA [3:0] }, Y={ \ID.instruction [31:27] \ID.instruction [25:11] \ID.instruction [3:0] }
      New connections: { \ID.instruction [26] \ID.instruction [10:4] } = 8'00000000
    Consolidated identical input bits for $mux cell $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][3][7]$290:
      Old ports: A=7'0000110, B=7'0001110, Y=$memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][3]$b$268
      New ports: A=1'0, B=1'1, Y=$memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][3]$b$268 [3]
      New connections: { $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][3]$b$268 [6:4] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][3]$b$268 [2:0] } = 6'000110
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/top_module_project6/src/top_module_project6.v:54$7:
      Old ports: A=3'000, B=3'111, Y=$ternary$/openlane/designs/top_module_project6/src/top_module_project6.v:54$7_Y
      New ports: A=1'0, B=1'1, Y=$ternary$/openlane/designs/top_module_project6/src/top_module_project6.v:54$7_Y [0]
      New connections: $ternary$/openlane/designs/top_module_project6/src/top_module_project6.v:54$7_Y [2:1] = { $ternary$/openlane/designs/top_module_project6/src/top_module_project6.v:54$7_Y [0] $ternary$/openlane/designs/top_module_project6/src/top_module_project6.v:54$7_Y [0] }
  Optimizing cells in module \top_module_project6.
    Consolidated identical input bits for $mux cell $memory\ID.instruction_memory$rdmux[0][3][5]$329:
      Old ports: A=$memory\ID.instruction_memory$rdmux[0][3][5]$a$330, B=24'x, Y=$memory\ID.instruction_memory$rdmux[0][2][2]$b$310
      New ports: A=$memory\ID.instruction_memory$rdmux[0][3][5]$a$330 [1:0], B=2'x, Y=$memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [1:0]
      New connections: $memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [23:2] = { $memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [1] $memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [1] $memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [1] $memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [1:0] $memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [1] $memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [1] $memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [1] $memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [1] $memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [1] $memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [1] $memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [1] $memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [1] $memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [1] $memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [1] $memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [1] $memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [1] $memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [1] $memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [1] $memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [1:0] $memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [0] }
    Consolidated identical input bits for $mux cell $memory\ID.instruction_memory$rdmux[0][3][4]$326:
      Old ports: A=$memory\ID.instruction_memory$rdmux[0][3][4]$a$327, B=$memory\ID.instruction_memory$rdmux[0][3][4]$b$328, Y=$memory\ID.instruction_memory$rdmux[0][2][2]$a$309
      New ports: A={ 2'11 $memory\ID.instruction_memory$rdmux[0][3][4]$a$327 [5] $memory\ID.instruction_memory$rdmux[0][3][4]$a$327 [7] $memory\ID.instruction_memory$rdmux[0][3][4]$a$327 [7] $memory\ID.instruction_memory$rdmux[0][3][4]$a$327 [5] 2'00 }, B={ $memory\ID.instruction_memory$rdmux[0][3][4]$b$328 [0] 1'0 $memory\ID.instruction_memory$rdmux[0][3][4]$b$328 [0] $memory\ID.instruction_memory$rdmux[0][3][4]$b$328 [0] 1'0 $memory\ID.instruction_memory$rdmux[0][3][4]$b$328 [4] $memory\ID.instruction_memory$rdmux[0][3][4]$b$328 [4] $memory\ID.instruction_memory$rdmux[0][3][4]$b$328 [0] }, Y={ $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [16:14] $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [9] $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [7] $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [5:4] $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [0] }
      New connections: { $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [23:17] $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [13:10] $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [8] $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [6] $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [3:1] } = { $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [0] 5'10000 $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [4] 2'00 $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [9] $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [7] 1'0 $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [5] 3'000 }
    Consolidated identical input bits for $mux cell $memory\ID.instruction_memory$rdmux[0][3][3]$323:
      Old ports: A=$memory\ID.instruction_memory$rdmux[0][3][3]$a$324, B=$memory\ID.instruction_memory$rdmux[0][3][3]$b$325, Y=$memory\ID.instruction_memory$rdmux[0][2][1]$b$307
      New ports: A={ $memory\ID.instruction_memory$rdmux[0][3][3]$a$324 [4] $memory\ID.instruction_memory$rdmux[0][3][3]$a$324 [1] $memory\ID.instruction_memory$rdmux[0][3][3]$a$324 [1] $memory\ID.instruction_memory$rdmux[0][3][3]$a$324 [4] $memory\ID.instruction_memory$rdmux[0][3][3]$a$324 [1] 1'0 }, B={ 2'11 $memory\ID.instruction_memory$rdmux[0][3][3]$b$325 [9] 3'001 }, Y={ $memory\ID.instruction_memory$rdmux[0][2][1]$b$307 [22] $memory\ID.instruction_memory$rdmux[0][2][1]$b$307 [11] $memory\ID.instruction_memory$rdmux[0][2][1]$b$307 [9] $memory\ID.instruction_memory$rdmux[0][2][1]$b$307 [4] $memory\ID.instruction_memory$rdmux[0][2][1]$b$307 [1:0] }
      New connections: { $memory\ID.instruction_memory$rdmux[0][2][1]$b$307 [23] $memory\ID.instruction_memory$rdmux[0][2][1]$b$307 [21:12] $memory\ID.instruction_memory$rdmux[0][2][1]$b$307 [10] $memory\ID.instruction_memory$rdmux[0][2][1]$b$307 [8:5] $memory\ID.instruction_memory$rdmux[0][2][1]$b$307 [3:2] } = { $memory\ID.instruction_memory$rdmux[0][2][1]$b$307 [0] 1'0 $memory\ID.instruction_memory$rdmux[0][2][1]$b$307 [1] 3'000 $memory\ID.instruction_memory$rdmux[0][2][1]$b$307 [1] 4'0000 $memory\ID.instruction_memory$rdmux[0][2][1]$b$307 [0] 2'00 $memory\ID.instruction_memory$rdmux[0][2][1]$b$307 [4] 2'00 $memory\ID.instruction_memory$rdmux[0][2][1]$b$307 [1] }
    Consolidated identical input bits for $mux cell $memory\ID.instruction_memory$rdmux[0][3][2]$320:
      Old ports: A=24'000000000000000000000000, B=$memory\ID.instruction_memory$rdmux[0][3][2]$b$322, Y=$memory\ID.instruction_memory$rdmux[0][2][1]$a$306
      New ports: A=1'0, B=$memory\ID.instruction_memory$rdmux[0][3][2]$b$322 [2], Y=$memory\ID.instruction_memory$rdmux[0][2][1]$a$306 [2]
      New connections: { $memory\ID.instruction_memory$rdmux[0][2][1]$a$306 [23:3] $memory\ID.instruction_memory$rdmux[0][2][1]$a$306 [1:0] } = { $memory\ID.instruction_memory$rdmux[0][2][1]$a$306 [2] $memory\ID.instruction_memory$rdmux[0][2][1]$a$306 [2] 10'0000000000 $memory\ID.instruction_memory$rdmux[0][2][1]$a$306 [2] 10'0000000000 }
    Consolidated identical input bits for $mux cell $memory\ID.instruction_memory$rdmux[0][3][1]$317:
      Old ports: A=$memory\ID.instruction_memory$rdmux[0][3][1]$a$318, B=$memory\ID.instruction_memory$rdmux[0][3][1]$b$319, Y=$memory\ID.instruction_memory$rdmux[0][2][0]$b$304
      New ports: A={ $memory\ID.instruction_memory$rdmux[0][3][1]$a$318 [1] 1'0 $memory\ID.instruction_memory$rdmux[0][3][1]$a$318 [2:1] }, B={ $memory\ID.instruction_memory$rdmux[0][3][1]$b$319 [5] $memory\ID.instruction_memory$rdmux[0][3][1]$b$319 [5] 2'00 }, Y={ $memory\ID.instruction_memory$rdmux[0][2][0]$b$304 [9] $memory\ID.instruction_memory$rdmux[0][2][0]$b$304 [5] $memory\ID.instruction_memory$rdmux[0][2][0]$b$304 [2:1] }
      New connections: { $memory\ID.instruction_memory$rdmux[0][2][0]$b$304 [23:10] $memory\ID.instruction_memory$rdmux[0][2][0]$b$304 [8:6] $memory\ID.instruction_memory$rdmux[0][2][0]$b$304 [4:3] $memory\ID.instruction_memory$rdmux[0][2][0]$b$304 [0] } = { $memory\ID.instruction_memory$rdmux[0][2][0]$b$304 [9] $memory\ID.instruction_memory$rdmux[0][2][0]$b$304 [1] 2'00 $memory\ID.instruction_memory$rdmux[0][2][0]$b$304 [2] 2'00 $memory\ID.instruction_memory$rdmux[0][2][0]$b$304 [5] $memory\ID.instruction_memory$rdmux[0][2][0]$b$304 [5] $memory\ID.instruction_memory$rdmux[0][2][0]$b$304 [5] $memory\ID.instruction_memory$rdmux[0][2][0]$b$304 [9] 1'0 $memory\ID.instruction_memory$rdmux[0][2][0]$b$304 [9] 1'0 $memory\ID.instruction_memory$rdmux[0][2][0]$b$304 [5] $memory\ID.instruction_memory$rdmux[0][2][0]$b$304 [5] $memory\ID.instruction_memory$rdmux[0][2][0]$b$304 [5] 1'0 $memory\ID.instruction_memory$rdmux[0][2][0]$b$304 [2] 1'0 }
    Consolidated identical input bits for $mux cell $memory\ID.instruction_memory$rdmux[0][3][0]$314:
      Old ports: A=$memory\ID.instruction_memory$rdmux[0][3][0]$a$315, B=$memory\ID.instruction_memory$rdmux[0][3][0]$b$316, Y=$memory\ID.instruction_memory$rdmux[0][2][0]$a$303
      New ports: A={ 3'100 $memory\ID.instruction_memory$rdmux[0][3][0]$a$315 [0] 1'1 $memory\ID.instruction_memory$rdmux[0][3][0]$a$315 [0] 2'01 $memory\ID.instruction_memory$rdmux[0][3][0]$a$315 [0] }, B={ $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [0] 1'1 $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [0] 1'1 $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [4] $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [4] $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [4] 1'0 $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [0] }, Y={ $memory\ID.instruction_memory$rdmux[0][2][0]$a$303 [23] $memory\ID.instruction_memory$rdmux[0][2][0]$a$303 [17] $memory\ID.instruction_memory$rdmux[0][2][0]$a$303 [13] $memory\ID.instruction_memory$rdmux[0][2][0]$a$303 [11:9] $memory\ID.instruction_memory$rdmux[0][2][0]$a$303 [4] $memory\ID.instruction_memory$rdmux[0][2][0]$a$303 [1:0] }
      New connections: { $memory\ID.instruction_memory$rdmux[0][2][0]$a$303 [22:18] $memory\ID.instruction_memory$rdmux[0][2][0]$a$303 [16:14] $memory\ID.instruction_memory$rdmux[0][2][0]$a$303 [12] $memory\ID.instruction_memory$rdmux[0][2][0]$a$303 [8:5] $memory\ID.instruction_memory$rdmux[0][2][0]$a$303 [3:2] } = { 1'1 $memory\ID.instruction_memory$rdmux[0][2][0]$a$303 [13] 2'00 $memory\ID.instruction_memory$rdmux[0][2][0]$a$303 [13] 1'0 $memory\ID.instruction_memory$rdmux[0][2][0]$a$303 [4] $memory\ID.instruction_memory$rdmux[0][2][0]$a$303 [13] $memory\ID.instruction_memory$rdmux[0][2][0]$a$303 [10] $memory\ID.instruction_memory$rdmux[0][2][0]$a$303 [4] $memory\ID.instruction_memory$rdmux[0][2][0]$a$303 [4] 2'00 $memory\ID.instruction_memory$rdmux[0][2][0]$a$303 [1:0] }
    Consolidated identical input bits for $mux cell $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][3]$266:
      Old ports: A=$memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][3]$a$267, B=$memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][3]$b$268, Y=$memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][1][1]$b$256
      New ports: A={ $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][3]$a$267 [1] 1'0 $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][3]$a$267 [1:0] }, B={ 1'0 $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][3]$b$268 [3] 2'10 }, Y={ $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][1][1]$b$256 [6] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][1][1]$b$256 [3] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][1][1]$b$256 [1:0] }
      New connections: { $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][1][1]$b$256 [5:4] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][1][1]$b$256 [2] } = { $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][1][1]$b$256 [0] 1'0 $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][1][1]$b$256 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][2]$263:
      Old ports: A=$memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][2]$a$264, B=$memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][2]$b$265, Y=$memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][1][1]$a$255
      New ports: A={ $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][2]$a$264 [3] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][2]$a$264 [3] 1'0 }, B={ 1'0 $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][2]$b$265 [3] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][2]$b$265 [0] }, Y={ $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][1][1]$a$255 [4:3] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][1][1]$a$255 [0] }
      New connections: { $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][1][1]$a$255 [6:5] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][1][1]$a$255 [2:1] } = { 3'000 $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][1][1]$a$255 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][1]$260:
      Old ports: A=$memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][1]$a$261, B=$memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][1]$b$262, Y=$memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][1][0]$b$253
      New ports: A={ 2'01 $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][1]$a$261 [0] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][1]$a$261 [1:0] }, B={ $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][1]$b$262 [3] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][1]$b$262 [3] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][1]$b$262 [3] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][1]$b$262 [1] 1'0 }, Y={ $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][1][0]$b$253 [5:3] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][1][0]$b$253 [1:0] }
      New connections: { $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][1][0]$b$253 [6] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][1][0]$b$253 [2] } = { $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][1][0]$b$253 [5] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][0]$257:
      Old ports: A=$memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][0]$a$258, B=$memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][0]$b$259, Y=$memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][1][0]$a$252
      New ports: A={ 1'1 $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][0]$a$258 [0] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][0]$a$258 [0] 1'0 $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][0]$a$258 [0] }, B={ 2'01 $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][0]$b$259 [4] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][2][0]$b$259 [2] 1'0 }, Y={ $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][1][0]$a$252 [6:4] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][1][0]$a$252 [2] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][1][0]$a$252 [0] }
      New connections: { $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][1][0]$a$252 [3] $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][1][0]$a$252 [1] } = { $memory$flatten\SSD.$auto$proc_rom.cc:150:do_switch$139$rdmux[0][1][0]$a$252 [0] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/top_module_project6/src/top_module_project6.v:53$8:
      Old ports: A=$ternary$/openlane/designs/top_module_project6/src/top_module_project6.v:54$7_Y, B=3'110, Y=$ternary$/openlane/designs/top_module_project6/src/top_module_project6.v:53$8_Y
      New ports: A={ $ternary$/openlane/designs/top_module_project6/src/top_module_project6.v:54$7_Y [0] $ternary$/openlane/designs/top_module_project6/src/top_module_project6.v:54$7_Y [0] }, B=2'10, Y=$ternary$/openlane/designs/top_module_project6/src/top_module_project6.v:53$8_Y [1:0]
      New connections: $ternary$/openlane/designs/top_module_project6/src/top_module_project6.v:53$8_Y [2] = $ternary$/openlane/designs/top_module_project6/src/top_module_project6.v:53$8_Y [1]
  Optimizing cells in module \top_module_project6.
    Consolidated identical input bits for $mux cell $memory\ID.instruction_memory$rdmux[0][2][2]$308:
      Old ports: A=$memory\ID.instruction_memory$rdmux[0][2][2]$a$309, B=$memory\ID.instruction_memory$rdmux[0][2][2]$b$310, Y=$memory\ID.instruction_memory$rdmux[0][1][1]$a$300
      New ports: A={ $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [0] 1'1 $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [16:14] $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [9] $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [7] $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [5:4] 2'00 $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [0] }, B={ $memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [1] $memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [1] $memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [1] $memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [1] $memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [1] $memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [1] $memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [1] $memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [1] $memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [1:0] $memory\ID.instruction_memory$rdmux[0][2][2]$b$310 [1:0] }, Y={ $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [23:22] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [16:14] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [9] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [7] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [5:4] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [2:0] }
      New connections: { $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [21:17] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [13:10] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [8] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [6] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [3] } = { $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [1] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [1] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [2:1] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [4] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [1] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [1] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [9] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [7] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [1] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [5] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [2] }
    Consolidated identical input bits for $mux cell $memory\ID.instruction_memory$rdmux[0][2][1]$305:
      Old ports: A=$memory\ID.instruction_memory$rdmux[0][2][1]$a$306, B=$memory\ID.instruction_memory$rdmux[0][2][1]$b$307, Y=$memory\ID.instruction_memory$rdmux[0][1][0]$b$298
      New ports: A={ $memory\ID.instruction_memory$rdmux[0][2][1]$a$306 [2] $memory\ID.instruction_memory$rdmux[0][2][1]$a$306 [2] $memory\ID.instruction_memory$rdmux[0][2][1]$a$306 [2] 2'00 $memory\ID.instruction_memory$rdmux[0][2][1]$a$306 [2] 2'00 }, B={ $memory\ID.instruction_memory$rdmux[0][2][1]$b$307 [0] $memory\ID.instruction_memory$rdmux[0][2][1]$b$307 [22] $memory\ID.instruction_memory$rdmux[0][2][1]$b$307 [11] $memory\ID.instruction_memory$rdmux[0][2][1]$b$307 [9] $memory\ID.instruction_memory$rdmux[0][2][1]$b$307 [4] $memory\ID.instruction_memory$rdmux[0][2][1]$b$307 [1] $memory\ID.instruction_memory$rdmux[0][2][1]$b$307 [1:0] }, Y={ $memory\ID.instruction_memory$rdmux[0][1][0]$b$298 [23:22] $memory\ID.instruction_memory$rdmux[0][1][0]$b$298 [11] $memory\ID.instruction_memory$rdmux[0][1][0]$b$298 [9] $memory\ID.instruction_memory$rdmux[0][1][0]$b$298 [4] $memory\ID.instruction_memory$rdmux[0][1][0]$b$298 [2:0] }
      New connections: { $memory\ID.instruction_memory$rdmux[0][1][0]$b$298 [21:12] $memory\ID.instruction_memory$rdmux[0][1][0]$b$298 [10] $memory\ID.instruction_memory$rdmux[0][1][0]$b$298 [8:5] $memory\ID.instruction_memory$rdmux[0][1][0]$b$298 [3] } = { 1'0 $memory\ID.instruction_memory$rdmux[0][1][0]$b$298 [1] 3'000 $memory\ID.instruction_memory$rdmux[0][1][0]$b$298 [1] 4'0000 $memory\ID.instruction_memory$rdmux[0][1][0]$b$298 [0] 2'00 $memory\ID.instruction_memory$rdmux[0][1][0]$b$298 [4] 2'00 }
    Consolidated identical input bits for $mux cell $memory\ID.instruction_memory$rdmux[0][2][0]$302:
      Old ports: A=$memory\ID.instruction_memory$rdmux[0][2][0]$a$303, B=$memory\ID.instruction_memory$rdmux[0][2][0]$b$304, Y=$memory\ID.instruction_memory$rdmux[0][1][0]$a$297
      New ports: A={ $memory\ID.instruction_memory$rdmux[0][2][0]$a$303 [23] 2'10 $memory\ID.instruction_memory$rdmux[0][2][0]$a$303 [13] $memory\ID.instruction_memory$rdmux[0][2][0]$a$303 [17] $memory\ID.instruction_memory$rdmux[0][2][0]$a$303 [13] $memory\ID.instruction_memory$rdmux[0][2][0]$a$303 [13] $memory\ID.instruction_memory$rdmux[0][2][0]$a$303 [11:9] $memory\ID.instruction_memory$rdmux[0][2][0]$a$303 [4] 1'0 $memory\ID.instruction_memory$rdmux[0][2][0]$a$303 [4] $memory\ID.instruction_memory$rdmux[0][2][0]$a$303 [1:0] $memory\ID.instruction_memory$rdmux[0][2][0]$a$303 [1:0] }, B={ $memory\ID.instruction_memory$rdmux[0][2][0]$b$304 [9] $memory\ID.instruction_memory$rdmux[0][2][0]$b$304 [1] $memory\ID.instruction_memory$rdmux[0][2][0]$b$304 [2] 2'00 $memory\ID.instruction_memory$rdmux[0][2][0]$b$304 [5] $memory\ID.instruction_memory$rdmux[0][2][0]$b$304 [9] $memory\ID.instruction_memory$rdmux[0][2][0]$b$304 [9] 1'0 $memory\ID.instruction_memory$rdmux[0][2][0]$b$304 [9] $memory\ID.instruction_memory$rdmux[0][2][0]$b$304 [5] $memory\ID.instruction_memory$rdmux[0][2][0]$b$304 [5] 1'0 $memory\ID.instruction_memory$rdmux[0][2][0]$b$304 [2] $memory\ID.instruction_memory$rdmux[0][2][0]$b$304 [2:1] 1'0 }, Y={ $memory\ID.instruction_memory$rdmux[0][1][0]$a$297 [23:22] $memory\ID.instruction_memory$rdmux[0][1][0]$a$297 [19:17] $memory\ID.instruction_memory$rdmux[0][1][0]$a$297 [14:13] $memory\ID.instruction_memory$rdmux[0][1][0]$a$297 [11:9] $memory\ID.instruction_memory$rdmux[0][1][0]$a$297 [7] $memory\ID.instruction_memory$rdmux[0][1][0]$a$297 [5:0] }
      New connections: { $memory\ID.instruction_memory$rdmux[0][1][0]$a$297 [21:20] $memory\ID.instruction_memory$rdmux[0][1][0]$a$297 [16:15] $memory\ID.instruction_memory$rdmux[0][1][0]$a$297 [12] $memory\ID.instruction_memory$rdmux[0][1][0]$a$297 [8] $memory\ID.instruction_memory$rdmux[0][1][0]$a$297 [6] } = { $memory\ID.instruction_memory$rdmux[0][1][0]$a$297 [18] 1'0 $memory\ID.instruction_memory$rdmux[0][1][0]$a$297 [5] $memory\ID.instruction_memory$rdmux[0][1][0]$a$297 [7] $memory\ID.instruction_memory$rdmux[0][1][0]$a$297 [10] $memory\ID.instruction_memory$rdmux[0][1][0]$a$297 [7] $memory\ID.instruction_memory$rdmux[0][1][0]$a$297 [5] }
  Optimizing cells in module \top_module_project6.
    Consolidated identical input bits for $mux cell $memory\ID.instruction_memory$rdmux[0][1][1]$299:
      Old ports: A=$memory\ID.instruction_memory$rdmux[0][1][1]$a$300, B=24'x, Y=$memory\ID.instruction_memory$rdmux[0][0][0]$b$295
      New ports: A={ $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [23:22] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [16:14] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [9] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [7] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [5:4] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [2:0] }, B=12'x, Y={ $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [23:22] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [16:14] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [9] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [7] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [5:4] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [2:0] }
      New connections: { $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [21:17] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [13:10] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [8] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [6] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [3] } = { $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [1] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [1] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [2:1] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [4] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [1] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [1] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [9] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [7] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [1] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [5] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [2] }
    Consolidated identical input bits for $mux cell $memory\ID.instruction_memory$rdmux[0][1][0]$296:
      Old ports: A=$memory\ID.instruction_memory$rdmux[0][1][0]$a$297, B=$memory\ID.instruction_memory$rdmux[0][1][0]$b$298, Y=$memory\ID.instruction_memory$rdmux[0][0][0]$a$294
      New ports: A={ $memory\ID.instruction_memory$rdmux[0][1][0]$a$297 [23:22] 1'0 $memory\ID.instruction_memory$rdmux[0][1][0]$a$297 [19:17] $memory\ID.instruction_memory$rdmux[0][1][0]$a$297 [5] $memory\ID.instruction_memory$rdmux[0][1][0]$a$297 [14:13] $memory\ID.instruction_memory$rdmux[0][1][0]$a$297 [10] $memory\ID.instruction_memory$rdmux[0][1][0]$a$297 [11:9] $memory\ID.instruction_memory$rdmux[0][1][0]$a$297 [7] $memory\ID.instruction_memory$rdmux[0][1][0]$a$297 [5] $memory\ID.instruction_memory$rdmux[0][1][0]$a$297 [5:0] }, B={ $memory\ID.instruction_memory$rdmux[0][1][0]$b$298 [23:22] $memory\ID.instruction_memory$rdmux[0][1][0]$b$298 [1] 3'000 $memory\ID.instruction_memory$rdmux[0][1][0]$b$298 [1] 3'000 $memory\ID.instruction_memory$rdmux[0][1][0]$b$298 [11] $memory\ID.instruction_memory$rdmux[0][1][0]$b$298 [0] $memory\ID.instruction_memory$rdmux[0][1][0]$b$298 [9] 1'0 $memory\ID.instruction_memory$rdmux[0][1][0]$b$298 [4] 1'0 $memory\ID.instruction_memory$rdmux[0][1][0]$b$298 [4] 1'0 $memory\ID.instruction_memory$rdmux[0][1][0]$b$298 [2:0] }, Y={ $memory\ID.instruction_memory$rdmux[0][0][0]$a$294 [23:22] $memory\ID.instruction_memory$rdmux[0][0][0]$a$294 [20:16] $memory\ID.instruction_memory$rdmux[0][0][0]$a$294 [14:9] $memory\ID.instruction_memory$rdmux[0][0][0]$a$294 [7:0] }
      New connections: { $memory\ID.instruction_memory$rdmux[0][0][0]$a$294 [21] $memory\ID.instruction_memory$rdmux[0][0][0]$a$294 [15] $memory\ID.instruction_memory$rdmux[0][0][0]$a$294 [8] } = { $memory\ID.instruction_memory$rdmux[0][0][0]$a$294 [18] $memory\ID.instruction_memory$rdmux[0][0][0]$a$294 [7] $memory\ID.instruction_memory$rdmux[0][0][0]$a$294 [7] }
  Optimizing cells in module \top_module_project6.
    Consolidated identical input bits for $mux cell $memory\ID.instruction_memory$rdmux[0][0][0]$293:
      Old ports: A=$memory\ID.instruction_memory$rdmux[0][0][0]$a$294, B=$memory\ID.instruction_memory$rdmux[0][0][0]$b$295, Y={ $flatten\ID.$memrd$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:68$94_DATA [31:27] $flatten\ID.$memrd$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:68$94_DATA [25:11] $flatten\ID.$memrd$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:68$94_DATA [3:0] }
      New ports: A={ $memory\ID.instruction_memory$rdmux[0][0][0]$a$294 [23:22] $memory\ID.instruction_memory$rdmux[0][0][0]$a$294 [20:16] $memory\ID.instruction_memory$rdmux[0][0][0]$a$294 [7] $memory\ID.instruction_memory$rdmux[0][0][0]$a$294 [14:9] $memory\ID.instruction_memory$rdmux[0][0][0]$a$294 [7] $memory\ID.instruction_memory$rdmux[0][0][0]$a$294 [7:0] }, B={ $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [23:22] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [1] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [2:1] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [4] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [16:14] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [1] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [1] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [9] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [7] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [9] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [1] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [7] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [5] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [5:4] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [2] $memory\ID.instruction_memory$rdmux[0][0][0]$b$295 [2:0] }, Y={ $flatten\ID.$memrd$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:68$94_DATA [31:30] $flatten\ID.$memrd$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:68$94_DATA [28:27] $flatten\ID.$memrd$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:68$94_DATA [25:11] $flatten\ID.$memrd$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:68$94_DATA [3:0] }
      New connections: $flatten\ID.$memrd$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:68$94_DATA [29] = $flatten\ID.$memrd$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:68$94_DATA [25]
  Optimizing cells in module \top_module_project6.
    Consolidated identical input bits for $mux cell $flatten\ID.$procmux$190:
      Old ports: A=24'000000000000000000000000, B={ $flatten\ID.$memrd$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:68$94_DATA [31:27] $flatten\ID.$memrd$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:68$94_DATA [25:11] $flatten\ID.$memrd$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:68$94_DATA [3:0] }, Y={ \ID.instruction [31:27] \ID.instruction [25:11] \ID.instruction [3:0] }
      New ports: A=23'00000000000000000000000, B={ $flatten\ID.$memrd$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:68$94_DATA [31:30] $flatten\ID.$memrd$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:68$94_DATA [28:27] $flatten\ID.$memrd$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:68$94_DATA [25:11] $flatten\ID.$memrd$\instruction_memory$/openlane/designs/top_module_project6/src/instruction_decoder.v:68$94_DATA [3:0] }, Y={ \ID.instruction [31:30] \ID.instruction [28:27] \ID.instruction [25:11] \ID.instruction [3:0] }
      New connections: \ID.instruction [29] = \ID.instruction [25]
  Optimizing cells in module \top_module_project6.
Performed a total of 38 changes.

41.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_module_project6'.
<suppressed ~30 debug messages>
Removed a total of 10 cells.

41.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $pmux $flatten\ALU.$procmux$152 in front of them:
        $auto$alumacc.cc:485:replace_alu$231
        $auto$alumacc.cc:485:replace_alu$228
        $auto$alumacc.cc:485:replace_alu$220

41.7. Executing OPT_DFF pass (perform DFF optimizations).

41.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_module_project6..
Removed 0 unused cells and 177 unused wires.
<suppressed ~1 debug messages>

41.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_module_project6.
<suppressed ~9 debug messages>

41.10. Rerunning OPT passes. (Maybe there is more to do..)

41.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_module_project6..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~45 debug messages>

41.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_module_project6.
    New ctrl vector for $pmux cell $flatten\ALU.$procmux$152: { $flatten\ALU.$procmux$157_CMP $flatten\ALU.$procmux$156_CMP $flatten\ALU.$procmux$155_CMP $auto$opt_reduce.cc:134:opt_pmux$890 }
    Consolidated identical input bits for $mux cell $memory\ID.instruction_memory$rdmux[0][2][2]$308:
      Old ports: A={ $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [23] 1'1 $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [16:14] $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [11:10] $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [6] $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [17] 2'00 $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [23] }, B=12'000000000101, Y={ $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [23:22] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [16:14] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [11:10] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [6] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [17] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [19] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [21] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [0] }
      New ports: A={ $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [23] 1'1 $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [16:14] $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [11:10] $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [6] $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [17] 1'0 $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [23] }, B=11'00000000011, Y={ $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [23:22] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [16:14] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [11:10] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [6] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [17] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [19] $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [0] }
      New connections: $memory\ID.instruction_memory$rdmux[0][1][1]$a$300 [21] = 1'0
    Consolidated identical input bits for $mux cell $memory\ID.instruction_memory$rdmux[0][3][4]$326:
      Old ports: A={ 2'11 $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [23] $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [15] $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [15] $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [23] 2'00 }, B={ $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [23] 1'0 $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [23] $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [23] 1'0 $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [15] $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [15] $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [23] }, Y={ $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [16:14] $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [11:10] $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [6] $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [17] $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [23] }
      New ports: A={ 2'11 $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [15] $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [15] $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [23] 2'00 }, B={ $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [23] 1'0 $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [23] 1'0 $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [15] $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [15] $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [23] }, Y={ $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [16:15] $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [11:10] $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [6] $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [17] $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [23] }
      New connections: $memory\ID.instruction_memory$rdmux[0][2][2]$a$309 [14] = $memory\ID.instruction_memory$rdmux[0][3][0]$b$316 [23]
  Optimizing cells in module \top_module_project6.
Performed a total of 3 changes.

41.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_module_project6'.
Removed a total of 0 cells.

41.14. Executing OPT_SHARE pass.

41.15. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\RF.registers[9]$404 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[9]).
Adding EN signal on $memory\RF.registers[8]$402 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[8]).
Adding EN signal on $memory\RF.registers[7]$400 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[7]).
Adding EN signal on $memory\RF.registers[6]$398 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[6]).
Adding EN signal on $memory\RF.registers[5]$396 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[5]).
Adding EN signal on $memory\RF.registers[4]$394 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[4]).
Adding EN signal on $memory\RF.registers[3]$392 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[3]).
Adding EN signal on $memory\RF.registers[31]$448 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[31]).
Adding EN signal on $memory\RF.registers[30]$446 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[30]).
Adding EN signal on $memory\RF.registers[2]$390 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[2]).
Adding EN signal on $memory\RF.registers[29]$444 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[29]).
Adding EN signal on $memory\RF.registers[28]$442 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[28]).
Adding EN signal on $memory\RF.registers[27]$440 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[27]).
Adding EN signal on $memory\RF.registers[26]$438 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[26]).
Adding EN signal on $memory\RF.registers[25]$436 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[25]).
Adding EN signal on $memory\RF.registers[24]$434 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[24]).
Adding EN signal on $memory\RF.registers[23]$432 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[23]).
Adding EN signal on $memory\RF.registers[22]$430 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[22]).
Adding EN signal on $memory\RF.registers[21]$428 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[21]).
Adding EN signal on $memory\RF.registers[20]$426 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[20]).
Adding EN signal on $memory\RF.registers[1]$388 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[1]).
Adding EN signal on $memory\RF.registers[19]$424 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[19]).
Adding EN signal on $memory\RF.registers[18]$422 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[18]).
Adding EN signal on $memory\RF.registers[17]$420 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[17]).
Adding EN signal on $memory\RF.registers[16]$418 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[16]).
Adding EN signal on $memory\RF.registers[15]$416 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[15]).
Adding EN signal on $memory\RF.registers[14]$414 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[14]).
Adding EN signal on $memory\RF.registers[13]$412 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[13]).
Adding EN signal on $memory\RF.registers[12]$410 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[12]).
Adding EN signal on $memory\RF.registers[11]$408 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[11]).
Adding EN signal on $memory\RF.registers[10]$406 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[10]).
Adding EN signal on $memory\RF.registers[0]$386 ($dff) from module top_module_project6 (D = \RF.write_data, Q = \RF.registers[0]).

41.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_module_project6..
Removed 32 unused cells and 38 unused wires.
<suppressed ~33 debug messages>

41.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_module_project6.

41.18. Rerunning OPT passes. (Maybe there is more to do..)

41.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_module_project6..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

41.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_module_project6.
Performed a total of 0 changes.

41.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_module_project6'.
Removed a total of 0 cells.

41.22. Executing OPT_SHARE pass.

41.23. Executing OPT_DFF pass (perform DFF optimizations).

41.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_module_project6..

41.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_module_project6.

41.26. Finished OPT passes. (There is nothing left to do.)

42. Executing TECHMAP pass (map to technology primitives).

42.1. Executing Verilog-2005 frontend: /nix/store/sx2v0i73mn1ih2z1nk61pm9n5gjgpidy-yosys/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nix/store/sx2v0i73mn1ih2z1nk61pm9n5gjgpidy-yosys/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

42.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $sdff.
Running "alumacc" on wrapper $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $and.
Using template $paramod$8fabc56b80a569262acfc42757a02ca0b8e91278\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using template $paramod$constmap:b9a86d073741c2a0f7bb241e73c2dd11747f3288$paramod$56955d0f36f77738c952d3505dc563df3ee11b94\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:b9a86d073741c2a0f7bb241e73c2dd11747f3288$paramod$dce7c1188cb25d2520d170426d59301c3b73f9e7\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$b098bc6f249c0ac91c4d6e19d54b23c285914115\_90_pmux for cells of type $pmux.
Using template $paramod$ce0ec84be7047712840b0952f343ee9e63ef75d1\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adffe.
Using template $paramod$c2e415ef15bc3ccd2723772353a6b450d3d76206\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$c6baa65225090ac0a120feab1b920965244aa496\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~2632 debug messages>

43. Executing OPT pass (performing simple optimizations).

43.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_module_project6.
<suppressed ~762 debug messages>

43.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_module_project6'.
<suppressed ~720 debug messages>
Removed a total of 240 cells.

43.3. Executing OPT_DFF pass (perform DFF optimizations).

43.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_module_project6..
Removed 55 unused cells and 822 unused wires.
<suppressed ~57 debug messages>

43.5. Finished fast OPT passes.

44. Executing ABC pass (technology mapping using ABC).

44.1. Extracting gate netlist of module `\top_module_project6' to `<abc-temp-dir>/input.blif'..
Extracted 3892 gates and 4946 wires to a netlist network with 1052 inputs and 103 outputs.

44.1.1. Executing ABC.
Running ABC command: "/nix/store/wq2q0njg3sx8wvj2akz7x1qxwyrv9xlr-yosys-abc/bin/abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

44.1.2. Re-integrating ABC results.
ABC RESULTS:              XNOR cells:       35
ABC RESULTS:               NOT cells:     1097
ABC RESULTS:               MUX cells:     2347
ABC RESULTS:               NOR cells:       69
ABC RESULTS:             ORNOT cells:      119
ABC RESULTS:              NAND cells:       41
ABC RESULTS:            ANDNOT cells:      477
ABC RESULTS:               AND cells:       42
ABC RESULTS:               XOR cells:      155
ABC RESULTS:                OR cells:      415
ABC RESULTS:        internal signals:     3791
ABC RESULTS:           input signals:     1052
ABC RESULTS:          output signals:      103
Removing temp directory.

45. Executing OPT pass (performing simple optimizations).

45.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_module_project6.
<suppressed ~664 debug messages>

45.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_module_project6'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

45.3. Executing OPT_DFF pass (perform DFF optimizations).

45.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_module_project6..
Removed 3 unused cells and 1698 unused wires.
<suppressed ~18 debug messages>

45.5. Finished fast OPT passes.

46. Executing HIERARCHY pass (managing design hierarchy).

46.1. Analyzing design hierarchy..
Top module:  \top_module_project6

46.2. Analyzing design hierarchy..
Top module:  \top_module_project6
Removed 0 unused modules.

47. Printing statistics.

=== top_module_project6 ===

   Number of wires:               4785
   Number of wire bits:           6176
   Number of public wires:          68
   Number of public wire bits:    1419
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               5834
     $_ANDNOT_                     470
     $_AND_                         42
     $_DFFE_PN_                      2
     $_DFFE_PP0P_                    5
     $_DFFE_PP_                   1024
     $_MUX_                       2347
     $_NAND_                        41
     $_NOR_                         69
     $_NOT_                       1094
     $_ORNOT_                      118
     $_OR_                         412
     $_SDFF_PN0_                    20
     $_XNOR_                        35
     $_XOR_                        155

48. Executing CHECK pass (checking for obvious problems).
Checking module top_module_project6...
Found and reported 0 problems.

49. Generating Graphviz representation of design.
Writing dot description to `/openlane/designs/top_module_project6/runs/RUN_2025.05.29_19.10.38/tmp/synthesis/post_techmap.dot'.
Dumping module top_module_project6 to page 1.

50. Executing SHARE pass (SAT-based resource sharing).

51. Executing OPT pass (performing simple optimizations).

51.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_module_project6.

51.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_module_project6'.
Removed a total of 0 cells.

51.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_module_project6..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

51.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_module_project6.
Performed a total of 0 changes.

51.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_module_project6'.
Removed a total of 0 cells.

51.6. Executing OPT_DFF pass (perform DFF optimizations).

51.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_module_project6..

51.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_module_project6.

51.9. Finished OPT passes. (There is nothing left to do.)

52. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_module_project6..
Removed 0 unused cells and 26 unused wires.
<suppressed ~26 debug messages>

53. Printing statistics.

=== top_module_project6 ===

   Number of wires:               4759
   Number of wire bits:           5859
   Number of public wires:          42
   Number of public wire bits:    1102
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               5834
     $_ANDNOT_                     470
     $_AND_                         42
     $_DFFE_PN_                      2
     $_DFFE_PP0P_                    5
     $_DFFE_PP_                   1024
     $_MUX_                       2347
     $_NAND_                        41
     $_NOR_                         69
     $_NOT_                       1094
     $_ORNOT_                      118
     $_OR_                         412
     $_SDFF_PN0_                    20
     $_XNOR_                        35
     $_XOR_                        155

mapping tbuf

54. Executing TECHMAP pass (map to technology primitives).

54.1. Executing Verilog-2005 frontend: /home/pinarizmir/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v
Parsing Verilog input from `/home/pinarizmir/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v' to AST representation.
Generating RTLIL representation for module `\$_TBUF_'.
Successfully finished Verilog frontend.

54.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

55. Executing SIMPLEMAP pass (map simple cells to gate primitives).

56. Executing TECHMAP pass (map to technology primitives).

56.1. Executing Verilog-2005 frontend: /home/pinarizmir/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v
Parsing Verilog input from `/home/pinarizmir/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Successfully finished Verilog frontend.

56.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

57. Executing SIMPLEMAP pass (map simple cells to gate primitives).

58. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_2 (noninv, pins=3, area=21.27) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_2 (noninv, pins=6, area=35.03) is a direct match for cell type $_DFFSR_NNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_2 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_2 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_2 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

58.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\top_module_project6':
  mapped 5 $_DFF_PN0_ cells to \sky130_fd_sc_hd__dfrtp_2 cells.
  mapped 1046 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_2 cells.

59. Printing statistics.

=== top_module_project6 ===

   Number of wires:               5815
   Number of wire bits:           6915
   Number of public wires:          42
   Number of public wire bits:    1102
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               6890
     $_ANDNOT_                     470
     $_AND_                         42
     $_MUX_                       3398
     $_NAND_                        41
     $_NOR_                         69
     $_NOT_                       1099
     $_ORNOT_                      118
     $_OR_                         412
     $_XNOR_                        35
     $_XOR_                        155
     sky130_fd_sc_hd__dfrtp_2        5
     sky130_fd_sc_hd__dfxtp_2     1046

[INFO]: USING STRATEGY AREA 0

60. Executing ABC pass (technology mapping using ABC).

60.1. Extracting gate netlist of module `\top_module_project6' to `/tmp/yosys-abc-8wbY8R/input.blif'..
Extracted 5839 gates and 6893 wires to a netlist network with 1053 inputs and 1067 outputs.

60.1.1. Executing ABC.
Running ABC command: "/nix/store/wq2q0njg3sx8wvj2akz7x1qxwyrv9xlr-yosys-abc/bin/abc" -s -f /tmp/yosys-abc-8wbY8R/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-8wbY8R/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-8wbY8R/input.blif 
ABC: + read_lib -w /openlane/designs/top_module_project6/runs/RUN_2025.05.29_19.10.38/tmp/synthesis/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.03 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130A_merged" from "/openlane/designs/top_module_project6/runs/RUN_2025.05.29_19.10.38/tmp/synthesis/trimmed.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.05 sec
ABC: Memory =    9.54 MB. Time =     0.05 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /openlane/designs/top_module_project6/runs/RUN_2025.05.29_19.10.38/tmp/synthesis/synthesis.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_2".
ABC: Setting output load to be 33.442001.
ABC: + read_constr /openlane/designs/top_module_project6/runs/RUN_2025.05.29_19.10.38/tmp/synthesis/synthesis.sdc 
ABC: + fx 
ABC: + mfs 
ABC: + strash 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + retime -D -D 50000 -M 5 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + amap -m -Q 0.1 -F 20 -A 20 -C 5000 
ABC: + retime -D -D 50000 
ABC: + &get -n 
ABC: + &st 
ABC: + &dch 
ABC: + &nf 
ABC: + &put 
ABC: + buffer -N 10 -S 750.0 
ABC: + upsize -D 50000 
ABC: Current delay (8203.09 ps) does not exceed the target delay (50000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 50000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =   3579 ( 54.3 %)   Cap = 11.6 ff ( 13.3 %)   Area =    23804.08 ( 45.6 %)   Delay =  8953.26 ps  (  4.6 %)               
ABC: Path  0 --       6 : 0    3 pi                        A =   0.00  Df =  18.7  -10.9 ps  S =  31.6 ps  Cin =  0.0 ff  Cout =   5.3 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --    2123 : 1   10 sky130_fd_sc_hd__buf_1    A =   3.75  Df = 291.3 -112.8 ps  S = 330.2 ps  Cin =  2.1 ff  Cout =  27.7 ff  Cmax = 130.0 ff  G = 1255  
ABC: Path  2 --    2141 : 2    3 sky130_fd_sc_hd__and2b_2  A =   8.76  Df = 576.3 -115.2 ps  S =  76.4 ps  Cin =  1.6 ff  Cout =  11.9 ff  Cmax = 310.4 ff  G =  698  
ABC: Path  3 --    2149 : 4    2 sky130_fd_sc_hd__o31ai_2  A =  12.51  Df = 792.8 -263.0 ps  S = 231.3 ps  Cin =  4.4 ff  Cout =   6.6 ff  Cmax =  80.6 ff  G =  147  
ABC: Path  4 --    2150 : 1   10 sky130_fd_sc_hd__buf_1    A =   3.75  Df =1078.6 -348.8 ps  S = 287.5 ps  Cin =  2.1 ff  Cout =  24.0 ff  Cmax = 130.0 ff  G = 1112  
ABC: Path  5 --    2177 : 1   10 sky130_fd_sc_hd__buf_1    A =   3.75  Df =1386.2 -436.3 ps  S = 307.6 ps  Cin =  2.1 ff  Cout =  25.8 ff  Cmax = 130.0 ff  G = 1194  
ABC: Path  6 --    2182 : 5    8 sky130_fd_sc_hd__o311a_2  A =  11.26  Df =1718.7 -371.8 ps  S = 158.1 ps  Cin =  2.4 ff  Cout =  27.1 ff  Cmax = 293.9 ff  G = 1101  
ABC: Path  7 --    2783 : 5    1 sky130_fd_sc_hd__o2111a_2 A =  12.51  Df =1922.7 -341.1 ps  S =  37.8 ps  Cin =  2.4 ff  Cout =   1.7 ff  Cmax = 299.4 ff  G =   69  
ABC: Path  8 --    2787 : 4    5 sky130_fd_sc_hd__a2bb2o_2 A =  11.26  Df =2240.0 -156.5 ps  S = 126.8 ps  Cin =  1.7 ff  Cout =  22.0 ff  Cmax = 300.3 ff  G = 1223  
ABC: Path  9 --    2948 : 4    4 sky130_fd_sc_hd__or4_2    A =   8.76  Df =2963.9 -639.0 ps  S = 137.3 ps  Cin =  1.5 ff  Cout =  12.5 ff  Cmax = 310.4 ff  G =  792  
ABC: Path 10 --    2950 : 4    1 sky130_fd_sc_hd__or4_2    A =   8.76  Df =3582.3 -581.3 ps  S =  94.5 ps  Cin =  1.5 ff  Cout =   2.2 ff  Cmax = 310.4 ff  G =  140  
ABC: Path 11 --    2951 : 1    9 sky130_fd_sc_hd__buf_1    A =   3.75  Df =3793.5 -504.1 ps  S = 354.3 ps  Cin =  2.1 ff  Cout =  29.8 ff  Cmax = 130.0 ff  G = 1335  
ABC: Path 12 --    3396 : 4    4 sky130_fd_sc_hd__nor4_2   A =  12.51  Df =4273.7 -829.5 ps  S = 467.5 ps  Cin =  4.3 ff  Cout =  16.3 ff  Cmax =  64.1 ff  G =  359  
ABC: Path 13 --    3453 : 4    3 sky130_fd_sc_hd__or4b_2   A =  10.01  Df =4936.5-1246.0 ps  S = 125.0 ps  Cin =  1.5 ff  Cout =   9.0 ff  Cmax = 265.5 ff  G =  585  
ABC: Path 14 --    3470 : 2    3 sky130_fd_sc_hd__or2_2    A =   6.26  Df =5266.3-1443.5 ps  S =  76.6 ps  Cin =  1.5 ff  Cout =  10.7 ff  Cmax = 299.4 ff  G =  707  
ABC: Path 15 --    3494 : 2    3 sky130_fd_sc_hd__or2_2    A =   6.26  Df =5568.7-1621.5 ps  S =  70.7 ps  Cin =  1.5 ff  Cout =   8.6 ff  Cmax = 299.4 ff  G =  563  
ABC: Path 16 --    3513 : 2    3 sky130_fd_sc_hd__or2_2    A =   6.26  Df =5870.6-1801.1 ps  S =  71.9 ps  Cin =  1.5 ff  Cout =   9.0 ff  Cmax = 299.4 ff  G =  592  
ABC: Path 17 --    3533 : 2    3 sky130_fd_sc_hd__or2_2    A =   6.26  Df =6180.1-1981.0 ps  S =  76.6 ps  Cin =  1.5 ff  Cout =  10.7 ff  Cmax = 299.4 ff  G =  707  
ABC: Path 18 --    3550 : 2    3 sky130_fd_sc_hd__or2_2    A =   6.26  Df =6484.3-2159.0 ps  S =  71.9 ps  Cin =  1.5 ff  Cout =   9.0 ff  Cmax = 299.4 ff  G =  592  
ABC: Path 19 --    3573 : 2    3 sky130_fd_sc_hd__or2_2    A =   6.26  Df =6785.0-2338.4 ps  S =  70.8 ps  Cin =  1.5 ff  Cout =   8.6 ff  Cmax = 299.4 ff  G =  564  
ABC: Path 20 --    3591 : 2    6 sky130_fd_sc_hd__or2_2    A =   6.26  Df =7120.6-2512.8 ps  S = 111.6 ps  Cin =  1.5 ff  Cout =  19.8 ff  Cmax = 299.4 ff  G = 1301  
ABC: Path 21 --    3609 : 2    1 sky130_fd_sc_hd__or2_2    A =   6.26  Df =7415.5-2681.6 ps  S =  60.7 ps  Cin =  1.5 ff  Cout =   4.6 ff  Cmax = 299.4 ff  G =  306  
ABC: Path 22 --    3611 : 3    2 sky130_fd_sc_hd__a21oi_2  A =   8.76  Df =7613.5 -239.1 ps  S = 192.3 ps  Cin =  4.6 ff  Cout =  13.1 ff  Cmax = 128.2 ff  G =  277  
ABC: Path 23 --    3612 : 2    3 sky130_fd_sc_hd__xnor2_2  A =  16.27  Df =7812.1 -248.9 ps  S = 179.5 ps  Cin =  8.5 ff  Cout =   9.7 ff  Cmax = 121.8 ff  G =  107  
ABC: Path 24 --    3625 : 4    1 sky130_fd_sc_hd__o31a_2   A =  10.01  Df =8160.7 -410.0 ps  S =  67.5 ps  Cin =  2.3 ff  Cout =   9.0 ff  Cmax = 285.7 ff  G =  369  
ABC: Path 25 --    3630 : 2    1 sky130_fd_sc_hd__xnor2_2  A =  16.27  Df =8299.3 -154.9 ps  S =  96.1 ps  Cin =  8.5 ff  Cout =   2.4 ff  Cmax = 121.8 ff  G =   27  
ABC: Path 26 --    3636 : 3   10 sky130_fd_sc_hd__a21o_2   A =   8.76  Df =8483.2  -93.8 ps  S = 103.5 ps  Cin =  2.4 ff  Cout =  18.2 ff  Cmax = 309.5 ff  G =  739  
ABC: Path 27 --    4620 : 3    1 sky130_fd_sc_hd__mux2_2   A =  11.26  Df =8649.7  -16.8 ps  S =  45.5 ps  Cin =  2.3 ff  Cout =   2.2 ff  Cmax = 297.6 ff  G =   92  
ABC: Path 28 --    4621 : 1    1 sky130_fd_sc_hd__buf_1    A =   3.75  Df =8953.3  -84.7 ps  S = 396.4 ps  Cin =  2.1 ff  Cout =  33.4 ff  Cmax = 130.0 ff  G = 1590  
ABC: Start-point = pi5 (\ID.pc [0]).  End-point = po515 ($auto$rtlil.cc:2684:MuxGate$14162).
ABC: + print_stats -m 
ABC: netlist                       : i/o = 1053/ 1067  lat =    0  nd =  3579  edge =   7051  area =23798.12  delay =32.00  lev = 32
ABC: + write_blif /tmp/yosys-abc-8wbY8R/output.blif 

60.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__o311ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nand2b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nand3b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a221oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a2111oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o221ai_2 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__and4b_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nand4_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o311a_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o22ai_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o2bb2ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a22oi_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__or2b_2 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__and3b_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a32o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a31oi_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o2bb2a_2 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__nor4_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a2bb2oi_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a211oi_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__o21ba_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o2111a_2 cells:       52
ABC RESULTS:   sky130_fd_sc_hd__o22a_2 cells:       45
ABC RESULTS:   sky130_fd_sc_hd__a221o_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__o32a_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__a311oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o211ai_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o31ai_2 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__o31a_2 cells:       10
ABC RESULTS:   sky130_fd_sc_hd__o21bai_2 cells:       12
ABC RESULTS:   sky130_fd_sc_hd__or3_2 cells:       10
ABC RESULTS:   sky130_fd_sc_hd__o221a_2 cells:       35
ABC RESULTS:   sky130_fd_sc_hd__or4b_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__or4bb_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__or4_2 cells:       21
ABC RESULTS:   sky130_fd_sc_hd__and2b_2 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__a31o_2 cells:       21
ABC RESULTS:   sky130_fd_sc_hd__a21boi_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o21a_2 cells:       29
ABC RESULTS:   sky130_fd_sc_hd__a21oi_2 cells:       30
ABC RESULTS:   sky130_fd_sc_hd__and4_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__nand3_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o211a_2 cells:       46
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:       19
ABC RESULTS:   sky130_fd_sc_hd__and2_2 cells:       36
ABC RESULTS:   sky130_fd_sc_hd__xor2_2 cells:       19
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:       70
ABC RESULTS:   sky130_fd_sc_hd__a211o_2 cells:       84
ABC RESULTS:   sky130_fd_sc_hd__or3b_2 cells:       10
ABC RESULTS:   sky130_fd_sc_hd__nor2b_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__nor3_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__a2bb2o_2 cells:       22
ABC RESULTS:   sky130_fd_sc_hd__a22o_2 cells:       21
ABC RESULTS:   sky130_fd_sc_hd__a21bo_2 cells:       10
ABC RESULTS:   sky130_fd_sc_hd__a21o_2 cells:       68
ABC RESULTS:   sky130_fd_sc_hd__nor2_2 cells:       78
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:       83
ABC RESULTS:   sky130_fd_sc_hd__mux2_2 cells:      614
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:     1839
ABC RESULTS:   sky130_fd_sc_hd__xnor2_2 cells:       32
ABC RESULTS:   sky130_fd_sc_hd__o21ai_2 cells:       52
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:      105
ABC RESULTS:        internal signals:     4773
ABC RESULTS:           input signals:     1053
ABC RESULTS:          output signals:     1067
Removing temp directory.

61. Executing SETUNDEF pass (replace undef values with defined constants).

62. Executing HILOMAP pass (mapping to constant drivers).

63. Executing SPLITNETS pass (splitting up multi-bit signals).

64. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_module_project6..
Removed 1891 unused cells and 8805 unused wires.
<suppressed ~2569 debug messages>

65. Executing INSBUF pass (insert buffer cells for connected wires).

66. Executing CHECK pass (checking for obvious problems).
Checking module top_module_project6...
Found and reported 0 problems.

67. Printing statistics.

=== top_module_project6 ===

   Number of wires:               2733
   Number of wire bits:           2742
   Number of public wires:         416
   Number of public wire bits:     425
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2739
     sky130_fd_sc_hd__a2111oi_2      1
     sky130_fd_sc_hd__a211o_2       84
     sky130_fd_sc_hd__a211oi_2       4
     sky130_fd_sc_hd__a21bo_2        3
     sky130_fd_sc_hd__a21boi_2       3
     sky130_fd_sc_hd__a21o_2        47
     sky130_fd_sc_hd__a21oi_2       30
     sky130_fd_sc_hd__a221o_2        5
     sky130_fd_sc_hd__a221oi_2       1
     sky130_fd_sc_hd__a22o_2        19
     sky130_fd_sc_hd__a22oi_2        4
     sky130_fd_sc_hd__a2bb2o_2      20
     sky130_fd_sc_hd__a2bb2oi_2      2
     sky130_fd_sc_hd__a311oi_2       1
     sky130_fd_sc_hd__a31o_2        21
     sky130_fd_sc_hd__a31oi_2        3
     sky130_fd_sc_hd__a32o_2         1
     sky130_fd_sc_hd__and2_2        36
     sky130_fd_sc_hd__and2b_2        8
     sky130_fd_sc_hd__and3_2        19
     sky130_fd_sc_hd__and3b_2        2
     sky130_fd_sc_hd__and4_2         3
     sky130_fd_sc_hd__and4b_2        2
     sky130_fd_sc_hd__buf_1        620
     sky130_fd_sc_hd__dfrtp_2        5
     sky130_fd_sc_hd__dfxtp_2      406
     sky130_fd_sc_hd__inv_2        105
     sky130_fd_sc_hd__mux2_2       614
     sky130_fd_sc_hd__nand2_2       70
     sky130_fd_sc_hd__nand2b_2       1
     sky130_fd_sc_hd__nand3_2        3
     sky130_fd_sc_hd__nand3b_2       1
     sky130_fd_sc_hd__nand4_2        1
     sky130_fd_sc_hd__nor2_2        78
     sky130_fd_sc_hd__nor2b_2        3
     sky130_fd_sc_hd__nor3_2         4
     sky130_fd_sc_hd__nor4_2         1
     sky130_fd_sc_hd__o2111a_2      52
     sky130_fd_sc_hd__o211a_2       46
     sky130_fd_sc_hd__o211ai_2       3
     sky130_fd_sc_hd__o21a_2        29
     sky130_fd_sc_hd__o21ai_2       52
     sky130_fd_sc_hd__o21ba_2        2
     sky130_fd_sc_hd__o21bai_2      12
     sky130_fd_sc_hd__o221a_2       35
     sky130_fd_sc_hd__o221ai_2       9
     sky130_fd_sc_hd__o22a_2        45
     sky130_fd_sc_hd__o22ai_2        2
     sky130_fd_sc_hd__o2bb2a_2       8
     sky130_fd_sc_hd__o2bb2ai_2      1
     sky130_fd_sc_hd__o311a_2        2
     sky130_fd_sc_hd__o311ai_2       1
     sky130_fd_sc_hd__o31a_2        10
     sky130_fd_sc_hd__o31ai_2        7
     sky130_fd_sc_hd__o32a_2         4
     sky130_fd_sc_hd__or2_2         83
     sky130_fd_sc_hd__or2b_2         8
     sky130_fd_sc_hd__or3_2         10
     sky130_fd_sc_hd__or3b_2        10
     sky130_fd_sc_hd__or4_2         21
     sky130_fd_sc_hd__or4b_2         3
     sky130_fd_sc_hd__or4bb_2        2
     sky130_fd_sc_hd__xnor2_2       32
     sky130_fd_sc_hd__xor2_2        19

   Chip area for module '\top_module_project6': 27699.065600

68. Executing Verilog backend.
Dumping module `\top_module_project6'.

69. Executing JSON backend.

End of script. Logfile hash: 441d7e3cab, CPU: user 1.19s system 0.02s, MEM: 45.55 MB peak
Yosys 0.38 (git sha1 543faed9c8c, clang++ 17.0.6 -fPIC -Os)
Time spent: 80% 2x abc (4 sec), 4% 32x opt_expr (0 sec), ...
